{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sentio Prober Control Documentation","text":""},{"location":"#installation","title":"Installation","text":"<p>The package for controlling MPI probe stations running the MPI SENTIO Software suite is available via pythons package index. To install the package simply type:</p> <p><code>python -m pip install sentio-prober-control</code></p>"},{"location":"#overview","title":"Overview","text":"<p>All functionality is accessed via an object of type SentioProber . You should only have a single instance of this class in your  python script. Naturally a script should start with initializing the prober.</p>"},{"location":"#initialization","title":"Initialization","text":"<p>The following minimal example creates an instance of the prober class and initializes it for TCP/IP communication with a  SENTIO running on the local PC on port 35555:</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nprober.select_module(Module.Wafermap)\n</code></pre> <p>Some functionality is provided directy via member functions of the ProberSentio class. Functionality of SENTIO modules can be accessed via the module attributes class. </p>"},{"location":"#a-first-example","title":"A first example","text":"<p>The following example will set up a wafer map. Wafermap functionality is accessed via the map attribute of the prober class.</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\ndef main():\ntry:\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nprober.select_module(Module.Wafermap)\n# setup a wafermap\nmap = prober.map\nmap.create(200)\nmap.set_flat_params(180, 50000)\nmap.set_grid_params(5000, 5000, 0, 0, 4000)\nmap.set_street_size(0, 0)\nmap.set_axis_orient(AxisOrient.UpRight)\nmap.set_grid_origin(1, 2)\nmap.set_home_die(0, 0)\nmap.set_color_scheme(ColorScheme.ColorFromBin)\nmap.path.select_dies(TestSelection.All)\nmap.bins.set_all(3, BinSelection.All)\nmap.bins.load(\"C:\\ProgramData\\MPI Corporation\\Sentio\\config\\defaults\\default_bins.xbt\")\nprint(f\"Wafermap diameter: {map.get_diameter()} mm\")\nprint(f\"Grid axis orientation: {map.get_axis_orient()}\")\nprint(f\"Grid origin: {map.get_grid_origin()}\")\nprint(f\"Index size: {map.get_index_size()}\")\nprint(f\"Street Size: {map.get_street_size()}\")\nprint(f\"present dies: {map.get_num_dies(DieNumber.Present)}\")\nprint(f\"Selected dies: {map.get_num_dies(DieNumber.Selected)}\")\nprober.local_mode()\nexcept Exception as e:\nprint(\"\\n#### Error ##################################\")\nprint(f\"{e}\")\nif __name__ == \"__main__\":\nmain()\n</code></pre>"},{"location":"AuxCommandGroup/","title":"AuxCommandGroup","text":"<p>             Bases: <code>ModuleCommandGroupBase</code></p> <p>This command group contains functions for working with auxiliary sites of the chuck. You are not meant to create instances of this class on your own. Instead use the aux property of the SentioProber class.</p> <p>Attributes:</p> Name Type Description <code>cleaning</code> <code>AuxCleaningGroup</code> <p>A subgroup to provide logic for probe cleaning.</p>"},{"location":"AuxCommandGroup/#auxcleaninggroup","title":"AuxCleaningGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group provides functions for for cleaning the probe. You are not meant to create instances of this class on your own. Instead use the cleaning property of the AuxCommandGroup.</p> <p>Example:</p> <pre><code>    from sentio_prober_control.Sentio.ProberSentio import SentioProber\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nprober.aux.cleaning.enable_auto(True)\n</code></pre> <p>handler: python     options:         members:             AuxCleaningGroup</p>"},{"location":"AuxCommandGroup/#sentio_prober_control.Sentio.CommandGroups.AuxCleaningGroup.AuxCleaningGroup.enable_auto","title":"<code>enable_auto(stat)</code>","text":"<p>Enable automatic probe cleaning.</p> <p>Parameters:</p> Name Type Description Default <code>stat</code> <code>bool</code> <p>A flag indicating whether to enable or disable cleaning.</p> required"},{"location":"AuxCommandGroup/#sentio_prober_control.Sentio.CommandGroups.AuxCleaningGroup.AuxCleaningGroup.start","title":"<code>start(touchdowns=None)</code>","text":"<p>Start the cleaning procedure.</p> <p>Parameters:</p> Name Type Description Default <code>touchdowns</code> <code>int</code> <p>The number of touchdowns to perform.</p> <code>None</code>"},{"location":"Enumerations/","title":"Enumerations","text":""},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.AutoAlignCmd","title":"<code>AutoAlignCmd</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies an algorithm for performaing auto alignment.</p> <p>Attributes:</p> Name Type Description <code>AutoDieSize</code> <code>0</code> <p>Perform auto alignment. Determine die size with zero prior knowledge.</p> <code>UpdateDieSize</code> <code>1</code> <p>Perform auto alignment. Update die size based on current value.</p> <code>TwoPt</code> <code>2</code> <p>Use Two-Point alignment algorithm.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.AutoFocusAlgorithm","title":"<code>AutoFocusAlgorithm</code>","text":"<p>             Bases: <code>Enum</code></p> <p>A list of different AutoFocus algorithms.</p> <p>Attributes:</p> Name Type Description <code>Gradient</code> <code>0</code> <p>Gradient Engery</p> <code>Bandpass</code> <code>1</code> <p>Bandpass Filter</p> <code>Difference</code> <code>2</code> <p>Difference</p> <code>AutoCorrelation</code> <code>3</code> <p>Auto Correlation</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.AutoFocusCmd","title":"<code>AutoFocusCmd</code>","text":"<p>             Bases: <code>Enum</code></p> <p>A list of different AutoFocus functions.</p> <p>Attributes:</p> Name Type Description <code>Calibration</code> <code>0</code> <p>Execute focus calibration.</p> <code>Focus</code> <code>1</code> <p>Measure Focus curve and determine maximum.</p> <code>GoTo</code> <code>2</code> <p>Simply move the scope to distance from the wafer that is known to be in focus.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.AxisOrient","title":"<code>AxisOrient</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Represents an axis orientation.</p> <p>Thie enumeration is mostly used to describe axis orientations on the computer screen. For instance the axis orientation of the wafer map.</p> <p>Attributes:</p> Name Type Description <code>DownRight</code> <code>0</code> <p>Y axis pointing down; X axis pointing right.</p> <code>DownLeft</code> <code>1</code> <p>Y axis pointing down; X axis pointing left.</p> <code>UpRight</code> <code>2</code> <p>Y-axis pointing up; X axis pointing right.</p> <code>UpLeft</code> <code>3</code> <p>Y-axis pointing up; X axis pointing left.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.BinQuality","title":"<code>BinQuality</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumerator dor defining the quality parameter of a certain bin code.</p> <p>Attributes:</p> Name Type Description <code>All</code> <code>0</code> <p>Select dies and subsites.</p> <code>DiesOnly</code> <code>1</code> <p>Select dies only.</p> <code>SubsitesOnly</code> <code>2</code> <p>Select subsites only.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.BinSelection","title":"<code>BinSelection</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumerator for selecting dies for binning.</p> <p>Attributes:</p> Name Type Description <code>All</code> <code>0</code> <p>Select dies and subsites.</p> <code>DiesOnly</code> <code>1</code> <p>Select dies only.</p> <code>SubsitesOnly</code> <code>2</code> <p>Select subsites only.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.CameraMountPoint","title":"<code>CameraMountPoint</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Available camera mount points.</p> <p>A camera mount point is a physical position in the prober where a camera can be located. SENTIO refers to its camera via the camera mount point.</p> <p>Attributes:</p> Name Type Description <code>Scope</code> <code>0</code> <p>The downward looking microscope camera.</p> <code>Scope2</code> <code>1</code> <p>Second scope camera. This camera is only used by IMag to provide a wider field of view in addition to the scope camera.</p> <code>Chuck</code> <code>2</code> <p>The upward looking chuck camera.</p> <code>OffAxis</code> <code>3</code> <p>Downward looking platen camera.</p> <code>Vce</code> <code>4</code> <p>First Vce camera.</p> <code>Vce2</code> <code>5</code> <p>Second Vce camera.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ChuckPositionHint","title":"<code>ChuckPositionHint</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Position hint for the chuck stage.</p> <p>Attributes:</p> Name Type Description <code>Center</code> <code>0</code> <p>Chuck is at Center Position</p> <code>FrontLoad</code> <code>1</code> <p>Chuck is at Front Load Position</p> <code>SideLoad</code> <code>2</code> <p>Chuck is at Side Load Position</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ChuckSite","title":"<code>ChuckSite</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumeration containing chuck sites.</p> <p>A chuck site is a physical position that is attached to the chuck and is moving together with the chuck.</p> <p>Attributes:</p> Name Type Description <code>Wafer</code> <code>0</code> <p>The wafer site. This is where your wafer is supposed to be.</p> <code>AuxRight</code> <code>1</code> <p>Right auxilliary site (if available)</p> <code>AuxLeft</code> <code>2</code> <p>Left auxilliary site (if available)</p> <code>AuxRight2</code> <code>3</code> <p>Secondary right auxilliary site (if available)</p> <code>AuxLeft2</code> <code>4</code> <p>Secondary left auxilliary site (if available)</p> <code>ChuckCamera</code> <code>5</code> <p>The chuck camera</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ChuckThetaReference","title":"<code>ChuckThetaReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Reference to use for chuck theat motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use zero of the theta axis.</p> <code>Site</code> <code>1</code> <p>Use the trained site of \"home\" angle as the reference.</p> <code>Relative</code> <code>2</code> <p>Use the current theta position as reference.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ChuckXYReference","title":"<code>ChuckXYReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Defines a reference for chuck xy motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute chuck coordinates.</p> <code>Home</code> <code>1</code> <p>Use home position as reference.</p> <code>Relative</code> <code>2</code> <p>Use curent chuck position as reference.</p> <code>Center</code> <code>3</code> <p>Use chuck center position as reference.</p> <code>User</code> <code>4</code> <p>Use user defined coordinate system.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ChuckZReference","title":"<code>ChuckZReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Defines a position reference for chuck z-motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute chuck z coordinates with respect the the physical axis zero positon.</p> <code>Relative</code> <code>1</code> <p>Use relative chuck z coordinated with respect to the current position.</p> <code>Contact</code> <code>2</code> <p>Use relative chuck z coordinated with respect to the chucks contact height.</p> <code>Hover</code> <code>3</code> <p>Use relative chuck z coordinated with respect to the chucks hover height.</p> <code>Separation</code> <code>4</code> <p>Use relative chuck z coordinated with respect to the chucks separation height.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ColorScheme","title":"<code>ColorScheme</code>","text":"<p>             Bases: <code>Enum</code></p> <p>The color scheme used by the wafer map.</p> <p>Attributes:</p> Name Type Description <code>ColorFromBin</code> <code>0</code> <p>The color of a die is determined by the bin code of the die.</p> <code>ColorFromValue</code> <code>1</code> <p>The color of the die is determined by a floating point value attached to a die.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.CompensationMode","title":"<code>CompensationMode</code>","text":"<p>             Bases: <code>Enum</code></p> <p>A list with available compensation modes.</p> <p>Attributes:</p> Name Type Description <code>Lateral</code> <code>0</code> <p>Lateral (XY) compensation.</p> <code>Vertical</code> <code>1</code> <p>Vertical (Z) compensation.</p> <code>Both</code> <code>2</code> <p>Both lateral and vertical compensation.</p> <code>ProbeCard</code> <code>3</code> <p>Probe card compensation.</p> <code>MapScan</code> <code>4</code> <p>MapScan compensation.</p> <code>Topography</code> <code>5</code> <p>Topography compensation.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.CompensationType","title":"<code>CompensationType</code>","text":"<p>             Bases: <code>Enum</code></p> <p>A list of compensation types.</p> <p>Attributes:</p> Name Type Description <code>DieAlign</code> <code>0</code> <code>Topography</code> <code>1</code> <p>Vertical (Z) compensation.</p> <code>MapScan</code> <code>2</code> <p>Both lateral and vertical compensation.</p> <code>AlignDie</code> <code>3</code> <p>Probe card compensation.</p> <code>SkateDetection</code> <code>4</code> <p>MapScan compensation.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DefaultPattern","title":"<code>DefaultPattern</code>","text":"<p>             Bases: <code>Enum</code></p> <p>A list of slots for visual patterns used by SENTIO.</p> <p>Each pattern is used for a specific purpose internally.</p> <p>Attributes:</p> Name Type Description <code>Align</code> <code>0</code> <p>The pattern used for wafer alignment.</p> <code>Home</code> <code>1</code> <p>Pattern used for finding the home position</p> <code>DieAlignPos1</code> <code>3</code> <p>First pattern used for the die alignment. (on diced and taped wafers)</p> <code>DieAlignPos2</code> <code>4</code> <p>Second pattern used for the die alignment. (on diced and taped wafers)</p> <code>TwoPoint</code> <code>5</code> <p>Pattern for Two-Point alignment</p> <code>Vce</code> <code>6</code> <p>Pattern used for VCE contact height detection.</p> <code>Ptpa</code> <code>7</code> <p>A pattern used for probe to pad alignment.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DetectionAlgorithm","title":"<code>DetectionAlgorithm</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifes one of several of SENTIO's internal detection algorithms.</p> <p>Not all versions of SENTIO support all algorithms. The most current versions of SENTIO have eliminated all models except for the ones based on deep learning.</p> <p>Those new Standard models detect multiple class of objects with far greater reliability than the outdated models based on haar cascades.</p> <p>Attributes:</p> Name Type Description <code>Keypoint</code> <code>0</code> <p>A Keypoint / ORB detector.</p> <code>ProbeDetector</code> <code>1</code> <p>Deep learning based AI model trained on various types of probe tips.</p> <code>WaferDetector</code> <code>2</code> <p>Deep learning based AI model trained on wafer structures.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DetectionCoordindates","title":"<code>DetectionCoordindates</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies the coordinate system used for reporting box detections.</p> <p>Used by SENTIO's built in DetectionAlgorithm</p> <p>Attributes:</p> Name Type Description <code>Image</code> <code>0</code> <p>Use image coordinates. Results are returned as pixel coordinates.</p> <code>Fov</code> <code>1</code> <p>Coordinates are in micrometer relative to the center of the field of view.</p> <code>Roi</code> <code>2</code> <p>Coordinates are in micrometer relative to the center of the region of interest.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DialogButtons","title":"<code>DialogButtons</code>","text":"<p>             Bases: <code>Enum</code></p> <p>A list of buttons that can be used in SENTIO's dialogs.</p> <p>Attributes:</p> Name Type Description <code>Ok</code> <code>1</code> <p>An Ok button.</p> <code>Yes</code> <code>2</code> <p>A Yes button.</p> <code>No</code> <code>3</code> <p>A No button.</p> <code>Cancel</code> <code>4</code> <p>A Cancel button.</p> <code>OkCancel</code> <code>5</code> <p>Both the Ok and the Cancel button.</p> <code>YesNo</code> <code>6</code> <p>Both a Yes and a No button.</p> <code>YesCancel</code> <code>7</code> <p>Yes and cancel button.</p> <code>YesNoCancel</code> <code>8</code> <p>Yes, No and Cancel button.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DieCompensationMode","title":"<code>DieCompensationMode</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Represents a compensation mode used by SENTIO.</p> <p>The compensation mode is a selector that defines what principal type of compensation shall be used.</p> <p>Attributes:</p> Name Type Description <code>Lateral</code> <code>0</code> <p>Use lateral compensation.</p> <code>Vertical</code> <code>1</code> <p>Use vertical compensation.</p> <code>Both</code> <code>2</code> <p>Use both lateral and vertical compensation.</p> <code>ProbeCard</code> <code>3</code> <p>Use probe card compensation.</p> <code>SkateDetection</code> <code>4</code> <p>Use skate detection</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DieCompensationType","title":"<code>DieCompensationType</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Compensation Type.</p> <p>Attributes:</p> Name Type Description <code>DieAlign</code> <code>0</code> <p>Die Alignment.</p> <code>MapScan</code> <code>1</code> <p>MapScan scans the wafer once and created a x,y compensation table for later use.</p> <code>Topography</code> <code>2</code> <p>Topography scans the height og the wafer on chuck and created a height map.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.DieNumber","title":"<code>DieNumber</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies how dies are numbered.</p> <p>Attributes:</p> Name Type Description <code>Present</code> <code>1</code> <p>Number only dies that are present on the wafer.</p> <code>Selected</code> <code>2</code> <p>Number only dies that are selected for test.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.FindPatternReference","title":"<code>FindPatternReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Reference point for coordinates than returning a pattern position.</p> <p>Attributes:</p> Name Type Description <code>DieHome</code> <code>0</code> <p>Use Die Home position as reference.</p> <code>CenterOfRoi</code> <code>1</code> <p>Use Center of ROI as reference.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.LoadPosition","title":"<code>LoadPosition</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumeration containing the possible load positions.</p> <p>Not all load positions are available on all probe stations.</p> <p>Attributes:</p> Name Type Description <code>Front</code> <code>0</code> <p>The Front Load position. All probe station have a front load position.</p> <code>Side</code> <code>1</code> <p>The Side Load position. The side load position is optional and only present on systems with a side loader, a cassette loader or a wafer wallet.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.LoaderStation","title":"<code>LoaderStation</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumeration containing loader stations.</p> <p>Attributes:</p> Name Type Description <code>Cassette1</code> <code>0</code> <p>First cassette station.</p> <code>Cassette2</code> <code>1</code> <p>Second cassette station.</p> <code>PreAligner</code> <code>2</code> <p>Prealigner Station for wafer prealignment.</p> <code>Chuck</code> <code>3</code> <p>The chuck station.</p> <code>ForkA</code> <code>4</code> <p>Robot fork A</p> <code>ForkB</code> <code>5</code> <p>Roboit fork B</p> <code>WaferWallet</code> <code>6</code> <p>5 slow wafer wallet station</p> <code>IdReader</code> <code>7</code> <p>Id-reader station.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.Module","title":"<code>Module</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumerator containing the names of all SENTIO modules.</p> <p>Module availability is determined by the specific type of probe station. All probe stations have the dashboard, setup and service modules. Most likely wafermap and Vision module will also be present (unless you have a purely manual station)</p> <p>Attributes:</p> Name Type Description <code>Wafermap</code> <code>0</code> <p>The wafermap module. This module is used for wafer alignment and wafer mapping.</p> <code>Vision</code> <code>1</code> <p>The vision module. This module is used for die alignment and wafer inspection.</p> <code>Setup</code> <code>2</code> <p>The setup module. This module is used for setting up the probe station.</p> <code>Service</code> <code>3</code> <p>The service module. This module is used for service and maintenance.</p> <code>Qalibria</code> <code>4</code> <p>The Qalibria module. This module is used for Qalibria integration.</p> <code>AuxSites</code> <code>5</code> <p>The aux site module. This module is used for auxilliary site integration.</p> <code>Loader</code> <code>6</code> <p>The loader module. This module is used for loader integration.</p> <code>Dashboard</code> <code>7</code> <p>The dashboard module. This module is used for dashboard integration.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.OrientationMarker","title":"<code>OrientationMarker</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Defines the wafers orientation marker.</p> <p>Orientation markers can either be a notch or a flat in the wafer. The orientation marker is used by the prealigner to detect the wafer position.</p> <p>Today mostly notches are used ar orientation markes as they reduce the waste of wafer space.</p> <p>Attributes:</p> Name Type Description <code>Notch</code> <code>0</code> <p>Wafer uses a notch.</p> <code>Flat</code> <code>1</code> <p>Wafer uses a flat.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.PoiReferenceXy","title":"<code>PoiReferenceXy</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Referenc position for points of interest.</p> <p>Each point of interest can either be defines with respect to the center of the stage. Or with respect to the center of the die.</p> <p>Attributes:</p> Name Type Description <code>DieCenter</code> <code>0</code> <p>Use die center as the position reference.</p> <code>StageCenter</code> <code>1</code> <p>Use stage center as the position reference.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ProbeSentio","title":"<code>ProbeSentio</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumeration containing a list of position for motorized probes.</p> <p>Attributes:</p> Name Type Description <code>East</code> <code>0</code> <p>Probe is on the right side of the chuck.</p> <code>West</code> <code>1</code> <p>Probe is on the left side of the chuck.</p> <code>North</code> <code>2</code> <p>Probe is at the back side of the prober.</p> <code>South</code> <code>3</code> <p>Probe is on the front side of the prober.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ProbeXYReference","title":"<code>ProbeXYReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Position reference for mororized probe movements.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute probe coordinates.</p> <code>Home</code> <code>1</code> <p>Use coordinates with respect to the probe home position.</p> <code>Current</code> <code>2</code> <p>Use coordinates with respect to the current probe position.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ProbeZReference","title":"<code>ProbeZReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Position reference for probe z motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute probe coordinates.</p> <code>Current</code> <code>1</code> <p>Use coordinates with respect to the current probe position.</p> <code>Contact</code> <code>2</code> <p>Use coordinates with respect to the contact height.</p> <code>Separation</code> <code>3</code> <p>Use coordinates with respect to the separation height.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ProjectFileInfo","title":"<code>ProjectFileInfo</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumerator containing the different aspects of retrieving current project info.</p> <p>Attributes:</p> Name Type Description <code>NameOnly</code> <code>0</code> <p>Return only the project name.</p> <code>FullPath</code> <code>1</code> <p>Return the full path to the project file.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.PtpaFindTipsMode","title":"<code>PtpaFindTipsMode</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies the mode used by ptpa tip finding.</p> <p>Attributes:</p> Name Type Description <code>OnAxis</code> <code>0</code> <p>Use on axis tip finding.</p> <code>OffAxis</code> <code>1</code> <p>Use off axis tip finding.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.PtpaType","title":"<code>PtpaType</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Defines the type of Probe to Pad Alignment used by SENTIO.</p> <p>Attributes:</p> Name Type Description <code>OffAxis</code> <code>0</code> <p>Use off-axis PTPA with the platen camera and the chuck camera looking up to the probe tips.</p> <code>OnAxis</code> <code>1</code> <p>Use on axis PTPA with the scope camera looking down on the probe tips.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.RemoteCommandError","title":"<code>RemoteCommandError</code>","text":"<p>A list of possible error codes used by SENTIO.</p> <p>This list may not contain the full list of codes used by SENTIO due to the fact that SENTIO is a moving target and new error codes may be added or removed.</p> <p>Have a look at the remote command specification to see which codes are supported by your version.</p> <p>Attributes:</p> Name Type Description <code>NoError</code> <code>0</code> <p>No error occured.</p> <code>InternalError</code> <code>1</code> <p>An internal error occured in SENTIO. This is not supposed to happen and you can probably not fix the issue on your own. Please contact SENTIO support.</p> <code>ExecutionError</code> <code>2</code> <p>A generic execution error. This is the most widely used error code to signal remote command failure.</p> <code>CommandHandlerNotFound</code> <code>3</code> <p>A command handler for a certain subsystem of SENTIO was not found. This may happen when sending commands to a SENTIO module that is not available on a given machine.</p> <code>InvalidCommand</code> <code>4</code> <p>not used by SENTIO's native remote command set.</p> <code>InvalidCommandFormat</code> <code>5</code> <p>not used by SENTIO's native remote command set.</p> <code>InvalidParameter</code> <code>6</code> <p>A remote command parameter is incoreect.</p> <code>InvalidNumberOfParameters</code> <code>7</code> <p>The number of submitted remote command parameters is incorect.</p> <code>ArgumentOutOfBounds</code> <code>8</code> <p>A submitted parameter exceeds the range of allowed values.</p> <code>FileNotFound</code> <code>9</code> <p>A file that was supposed to be loaded by SENTIO was not found.</p> <code>InvalidFileFormat</code> <code>10</code> <p>not used by SENTIO's native remote command set.</p> <code>EndOfRoute</code> <code>11</code> <p>Stepping reached the end of the route.</p> <code>InvalidOperation</code> <code>12</code> <p>The requested operation is not allowed in the current state.</p> <code>NotSupported</code> <code>13</code> <p>The requested operation is not supported by the current version of SENTIO.</p> <code>SubsiteNotRoutable</code> <code>14</code> <p>The requested subsite is not routable.</p> <code>ProjectRequired</code> <code>15</code> <p>A requested operation require an active project.</p> <code>Unused</code> <code>16</code> <p>This error code is unused.</p> <code>PrealignmentFailed</code> <code>17</code> <p>Prealignment failed.</p> <code>HomePositionNotSet</code> <code>18</code> <p>The home position is not set.</p> <code>Timeout</code> <code>19</code> <p>A command or operation timed out.</p> <code>PatternNotTrained</code> <code>20</code> <p>A required pattern is not trained</p> <code>PatternNotFound</code> <code>21</code> <p>A pattern could not be found</p> <code>TooManyPatternsFound</code> <code>22</code> <p>Too many patterns were found</p> <code>ContactHeightNotSet</code> <code>23</code> <p>The contact height is not set.</p> <code>AutoFocusFailed</code> <code>24</code> <p>Auto focus failed on the wafer.</p> <code>TipFocusFailed</code> <code>25</code> <p>Auto focus failed on the tips.</p> <code>TipNotFound</code> <code>26</code> <p>A tip could not be found.</p> <code>OffsetOverTolerance</code> <code>27</code> <p>The offset is over tolerance.</p> <code>CommandPending</code> <code>30</code> <p>Returned when the status of an async command is polled with query_command_status and the command is Running</p> <code>AsyncCommandAborted</code> <code>31</code> <p>Returned when a async command was aborted prematurely</p> <code>UnknownCommandId</code> <code>32</code> <p>Returned when an async command is queried but SENTIO does not know anything about this command id</p> <code>CameraNotCalibrated</code> <code>35</code> <p>A camera required for a vision task is not calibrated</p> <code>CameraDoesNotExist</code> <code>36</code> <p>A required camera is not installed in the system.</p> <code>AlignAccuracyBad</code> <code>37</code> <p>Alignment accuracy over 10 \u00b5m</p> <code>SteppingWithWrongZPosition</code> <code>38</code> <p>Stepping when Chuck is below Separation</p> <code>FrontDoorOpen</code> <code>60</code> <p>The front load door is open</p> <code>LoaderDoorOpen</code> <code>61</code> <p>The side door is open</p> <code>FrontDoorLockFail</code> <code>62</code> <p>Front door lock cannot be engaged</p> <code>LoaderDoorLockFail</code> <code>63</code> <p>Side door lock cannot be engaged</p> <code>SlotOrStationOccupied</code> <code>64</code> <p>A slot or station that is the target of a wafer transfer is already occupied</p> <code>SlotOrStationEmpty</code> <code>65</code> <p>A slot or station that is the origin of a wafer transfer does not have a wafer</p> <code>ProbeBackDoorOpen</code> <code>66</code> <p>The probe back door is open</p> <code>ProbeSideDoorOpen</code> <code>67</code> <p>The probe side door is open (Not loader door, only TS2500/SE has this door, the door near the probe back door)</p> <code>VacuumFailed</code> <code>68</code> <p>Vacuum failed</p> <code>LoaderTrayDoorOpen</code> <code>69</code> <p>The tray door is open</p> <code>LoaderCassetteDoesNotExist</code> <code>80</code> <p>The cassette does not exist</p> <code>LoaderSlotNumberError</code> <code>81</code> <p>The slot number is not correct</p> <code>LoaderPreAlignerAngleError</code> <code>83</code> <p>The prealigner angle is not correct</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.RoutingPriority","title":"<code>RoutingPriority</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Defines the stepping order.</p> <p>Attributes:</p> Name Type Description <code>RowUniDir</code> <code>0</code> <p>Rows first always step in same direction.</p> <code>ColUniDir</code> <code>1</code> <p>Columns first always step in same direction.</p> <code>RowBiDir</code> <code>2</code> <p>Rows first. Step odd rows backwards.</p> <code>ColBiDir</code> <code>3</code> <p>Columns first. Step odd columns backwards.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.RoutingStartPoint","title":"<code>RoutingStartPoint</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Defines the starting point for routing (stepping commands).</p> <p>Attributes:</p> Name Type Description <code>UpperLeft</code> <code>0</code> <p>Stepping starts in upper left corner of the map.</p> <code>UpperRight</code> <code>1</code> <p>Stepping starts in upper right corner of the map.</p> <code>LowerLeft</code> <code>2</code> <p>Stepping stars in lower left corner of the map.</p> <code>LowerRight</code> <code>3</code> <p>Stepping starts in lower right corner of the map.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ScopeXYReference","title":"<code>ScopeXYReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Position reference for scope motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute scope coordinates.</p> <code>Home</code> <code>1</code> <p>Use coordinates with respect to the scope home position.</p> <code>Relative</code> <code>2</code> <p>Use coordinates with respect to the current scope position.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ScopeZReference","title":"<code>ScopeZReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Scope z reference for scoep motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute scope coordinates.</p> <code>Relative</code> <code>1</code> <p>Use coordinates with respect to the current scope position.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotLocation","title":"<code>SnapshotLocation</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies where a snapshot shall be saved.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotLocation.Local","title":"<code>Local = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The snapshot will be transferred to the PC that is running the python control script.  This option only makes sense if the prober and the control PC are different.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotLocation.Prober","title":"<code>Prober = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The snapshot is stored remotely on the prober PC that is executing SENTIO.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotType","title":"<code>SnapshotType</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies the type of image snapshot to be taken</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotType.CameraRaw","title":"<code>CameraRaw = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The snapshot is the raw image from the camera in original resolution</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotType.WithOverlays","title":"<code>WithOverlays = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The snapshot consists of a screenshot of the vision module inside SENTIO. This method  will also contain the overlays displayed by the vision module but the image resolution will be whatever the current resolution of SENTIO's vision module is.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SnapshotType.toSentioAbbr","title":"<code>toSentioAbbr()</code>","text":"<p>Turn the SnapshotType into a string that can be used as a parameter for SENTIO's snap_image command.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SoftwareFence","title":"<code>SoftwareFence</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumerator holding software fence implementations.</p> <p>Attributes:</p> Name Type Description <code>Disabled</code> <code>0</code> <p>Fence is disabled.</p> <code>Round</code> <code>1</code> <p>A round fence around the chuck, excluding aux sites.</p> <code>Rectangle</code> <code>2</code> <p>A rectangular fence around the chuck, may include parts of the aux sites.</p> <code>SoftwareLimit</code> <code>3</code> <p>Use software limits on axis. A Large rectangular fence around the chuck motion ares. Collisions with the prober housing are possible (TS-2000; tilted front door)</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.Stage","title":"<code>Stage</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Represents a stage in SENTIO.</p> <p>A stage is a piece of hardware that can be controlled by motors and moved in x, y and probably also z direction.</p> <p>Attributes:</p> Name Type Description <code>Chuck</code> <code>0</code> <p>The chuck stage. This is where the wafer is placed.</p> <code>Scope</code> <code>1</code> <p>The scope stage controls the downward looking microscope. This is an optional stage but it will be present on most probe stations.</p> <code>Vce</code> <code>2</code> <p>First Vce stage. Vce Stages can only be moved in z-direction.</p> <code>Vce2</code> <code>3</code> <p>Second Vce stage. Vce Stages can only be moved in z-direction.</p> <code>Probe1</code> <code>4</code> <p>First motorized probe.</p> <code>Probe2</code> <code>5</code> <p>Second motorized probe.</p> <code>Probe3</code> <code>6</code> <p>Third motorized probe.</p> <code>Probe4</code> <code>7</code> <p>Fourth motorized probe.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.StatusBits","title":"<code>StatusBits</code>","text":"<p>List of status codes used by SENTIO.</p> <p>SENTIO will encode certain status information into the error code variable. This status information does not represent an errors but rather a machine status.</p> <p>Attributes:</p> Name Type Description <code>EndOfRoute</code> <code>1</code> <p>Stepping reached the end of the route.</p> <code>LastSite</code> <code>2</code> <p>Stepping reached the last site of a die.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.SteppingContactMode","title":"<code>SteppingContactMode</code>","text":"<p>             Bases: <code>Enum</code></p> <p>This mode defines how the chuck behaves during steeping.</p> <p>Attributes:</p> Name Type Description <code>BackToContact</code> <code>0</code> <p>Chuck will move back to contact position after stepping.</p> <code>StepToSeparation</code> <code>1</code> <p>Chuck will move to separation position after stepping.</p> <code>LockContact</code> <code>2</code> <p>Chuck cannot step when at contact. You will have to manually move it away from its contact position before issuing the next step command.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.TestSelection","title":"<code>TestSelection</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Specifies which dies shall be selected for test.</p> <p>If a die is selected for test it is activated in the wafer map.</p> <p>Attributes:</p> Name Type Description <code>Nothing</code> <code>0</code> <p>Select no dies.</p> <code>Good</code> <code>1</code> <p>Select only the good dies.</p> <code>GoodAndUgly</code> <code>2</code> <p>Select only the good dies. Ugly dies are the dies with at least one corner in the edge area of the map. The are completely present on the wafer but may be damaged or have incomplete structures.</p> <code>GoodUglyAndEdge</code> <code>3</code> <p>Good dies are the dies that are completely within the wafer map with no edge lying in the edge area of the map. Ugly dies are the dies with at least one corner in the edge area of the map. The are completely present on the wafer but may be damaged or have incomplete structures. The dies with at leas one edge outside of the wafer are called edge dies. Those dies are incomplete.</p> <code>All</code> <code>4</code> <p>Select all dies for testing.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ThermoChuckState","title":"<code>ThermoChuckState</code>","text":"<p>             Bases: <code>Enum</code></p> <p>The state of a thermo chuck.</p> <p>Attributes:</p> Name Type Description <code>Soaking</code> <code>0</code> <p>The chuck is in soaking state,</p> <code>Cooling</code> <code>1</code> <p>The chuck is in cooling state,</p> <code>Heating</code> <code>2</code> <p>The chuck is in heating state,</p> <code>Uncontrolled</code> <code>3</code> <p>The chuck is in uncontrolled state,</p> <code>Standby</code> <code>4</code> <p>The chuck is in standby state,</p> <code>Error</code> <code>5</code> <p>The chuck is in error state,</p> <code>Controlling</code> <code>6</code> <p>The chuck is in controlling state,</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.VceZReference","title":"<code>VceZReference</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Reference for Vce z motions.</p> <p>Attributes:</p> Name Type Description <code>Zero</code> <code>0</code> <p>Use absolute Vce coordinates.</p> <code>Relative</code> <code>1</code> <p>Use coordinates with respect to the current Vce position.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.VirtualCarrierInitFlags","title":"<code>VirtualCarrierInitFlags</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Flags for initializing a virtual carrier measurement.</p> <p>Attributes:</p> Name Type Description <code>Start</code> <code>0</code> <p>Start a new virtual carrier measurement.</p> <code>Continue</code> <code>1</code> <p>Continue an existing virtual carrier measurement. If no measurement is running, this will start a new one.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.VirtualCarrierStepProcessingState","title":"<code>VirtualCarrierStepProcessingState</code>","text":"<p>             Bases: <code>Enum</code></p> <p>State of a single virtual carrier processing step. </p> <p>Attributes:</p> Name Type Description <code>Skip</code> <code>0</code> <p>The step is skipped.</p> <code>Done</code> <code>1</code> <p>The step is done.</p> <code>Ready</code> <code>2</code> <p>The step is ready to be executed.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.WorkArea","title":"<code>WorkArea</code>","text":"<p>             Bases: <code>Enum</code></p> <p>An enumeration containing probe station work areas. The OffAxis work area is only present if the specific model of probe station supports it.</p> <p>Attributes:</p> Name Type Description <code>Probing</code> <code>0</code> <p>The probing work area is the area in which the chuck is under the downward looking microscope. This is where the wafer is probed.</p> <code>Offaxis</code> <code>1</code> <p>The off axis work area is the area in which the chuck is under the off axis camera. This is where off axis ptpa is performed. The wafer cannot be probed here because there is no probe card.</p>"},{"location":"Enumerations/#sentio_prober_control.Sentio.Enumerations.ZPositionHint","title":"<code>ZPositionHint</code>","text":"<p>             Bases: <code>Enum</code></p> <p>Represents a hint for the z position of a stage.</p> <p>Not all values are used by all stages. A scope does not have a contact height and a chuck Hover height may be disabled by SENTIO.</p> <p>Attributes:</p> Name Type Description <code>Default</code> <code>0</code> <p>Used internally only. Essentially means the value is unset or undefined.</p> <code>Contact</code> <code>1</code> <p>Stage is at contact position.</p> <code>Hover</code> <code>2</code> <p>Stage is at hover position.</p> <code>Separation</code> <code>3</code> <p>Stage is at separation position</p> <code>Lift</code> <code>4</code> <p>Stage is at Lift position.</p> <code>Transfer</code> <code>5</code> <p>Chuck is at transfer position. This is used for the chuck only when the loader is doing a wafer transfer internally.</p>"},{"location":"GettingStarted/","title":"Getting Started","text":""},{"location":"GettingStarted/#installation","title":"Installation","text":"<p>The package for controlling MPI probe stations running the MPI SENTIO Software suite is available via pythons package index. To install the package simply type:</p> <p><code>py -m pip install sentio-prober-control</code></p>"},{"location":"GettingStarted/#overview","title":"Overview","text":"<p>All functionality is accessed via an object of type SentioProber . You should only have a single instance of this class in your  python script. This class is your gateway to control a probe station running the MPI SENTIO Software suite. Naturally a script  should start with initializing the prober.</p> <p>The following minimal example creates an instance of the prober class and triggers a switch of the active SENTIO  module by using its select_module function:</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nprober.select_module(Module.Wafermap)\n</code></pre> <p>Some functionality is provided directy via member functions of the ProberSentio class. Functionality of SENTIO modules can be accessed via the module attributes class. </p>"},{"location":"GettingStarted/#example","title":"Example","text":"<p>The following example will set up a wafer map. Wafermap functionality is accessed via the map attribute of the prober class.</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\ndef main():\ntry:\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nprober.select_module(Module.Wafermap)\n# setup a wafermap\nmap = prober.map\nmap.create(200)\nmap.set_flat_params(180, 50000)\nmap.set_grid_params(5000, 5000, 0, 0, 4000)\nmap.set_street_size(0, 0)\nmap.set_axis_orient(AxisOrient.UpRight)\nmap.set_grid_origin(1, 2)\nmap.set_home_die(0, 0)\nmap.set_color_scheme(ColorScheme.ColorFromBin)\nmap.path.select_dies(TestSelection.All)\nmap.bins.set_all(3, BinSelection.All)\nmap.bins.load(\"C:\\ProgramData\\MPI Corporation\\Sentio\\config\\defaults\\default_bins.xbt\")\nprint(f\"Wafermap diameter: {map.get_diameter()} mm\")\nprint(f\"Grid axis orientation: {map.get_axis_orient()}\")\nprint(f\"Grid origin: {map.get_grid_origin()}\")\nprint(f\"Index size: {map.get_index_size()}\")\nprint(f\"Street Size: {map.get_street_size()}\")\nprint(f\"present dies: {map.get_num_dies(DieNumber.Present)}\")\nprint(f\"Selected dies: {map.get_num_dies(DieNumber.Selected)}\")\nprober.local_mode()\nexcept Exception as e:\nprint(\"\\n#### Error ##################################\")\nprint(f\"{e}\")\nif __name__ == \"__main__\":\nmain()\n</code></pre>"},{"location":"GettingStarted/#quickstart","title":"Quickstart","text":"<p>The SentioProber class is your gateway to control a probe station running the MPI SENTIO  Software suite. In order to use it you need to create a SentioProber instance.</p> <p>The following example creates a prober instance and then triggers a switch of the active SENTIO module by  using the select_module function:</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import *\nfrom sentio_prober_control.Communication.CommunicatorTcpIp import CommunicatorTcpIp\nprober = SentioProber(CommunicatorTcpIp.create(\"127.0.0.1:35555\"))\nprober.select_module(Module.Wafermap)\n</code></pre>"},{"location":"LoaderCommandGroup/","title":"LoaderCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group contains functions for working with the loader. You are not meant to instantiate this class directly. Access it via the loader attribute of the SentioProber class.</p> <p>Example:</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nscan_result = prober.loader.scan_station(LoaderStation.Cassette1)\n</code></pre>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.has_station","title":"<code>has_station(station)</code>","text":"<p>Check wether a certain loader station is present.</p> <p>Wraps Sentios \"loader:has_station\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>station</code> <code>LoaderStation</code> <p>The station to check.</p> required <p>Returns:</p> Name Type Description <code>has_station</code> <code>bool</code> <p>True if the station is present, False otherwise.</p>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.load_wafer","title":"<code>load_wafer(src_station, src_slot, angle=None)</code>","text":"<p>Load a wafer onto the chuck with optional prealignment.</p> <p>Parameters:</p> Name Type Description Default <code>src_station</code> <code>LoaderStation</code> <p>The source station.</p> required <code>src_slot</code> <code>int</code> <p>The source slot.</p> required <code>angle</code> <code>int | None</code> <p>The prealignment angle.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>response</code> <code>Response</code> <p>A Response object.</p>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.prealign","title":"<code>prealign(marker, angle)</code>","text":"<p>Prealign a wafer.</p> <p>Wraps Sentios \"loader:prealign\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>marker</code> <code>OrientationMarker</code> <p>The type of wafer orientation marker.</p> required <code>angle</code> <code>float</code> <p>The prealignment angle.</p> required <p>Returns:</p> Name Type Description <code>response</code> <code>Response</code> <p>A Response object.</p>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.query_wafer_status","title":"<code>query_wafer_status(station, slot)</code>","text":"<p>Query the status of a wafer in a loader station.</p> <p>Wraps Sentios \"loader:query_wafer_status\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>station</code> <code>LoaderStation</code> <p>The station to query.</p> required <code>slot</code> <code>int</code> <p>The slot to query.</p> required <p>Returns:</p> Name Type Description <code>status</code> <code>Tuple[LoaderStation, int, int, int, float]</code> <p>A tuple with the following elements: OriginStation, OriginSlot, Wafer Size, Wafer Orientation, Progress Value.</p>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.scan_station","title":"<code>scan_station(station)</code>","text":"<p>Scans a loader station for wafers. Wraps Sentios \"loader:scan_station\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>station</code> <code>LoaderStation</code> <p>The station to scan.</p> required <p>Returns:</p> Name Type Description <code>result</code> <code>str</code> <p>A string with the scan result.</p>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.start_prepare_station","title":"<code>start_prepare_station(station, angle=None)</code>","text":"<p>Prepare a loader station for wafer processing.</p> <p>This command will trigger a scan of all wafers in a station. This command is an async remote command!</p> <p>Wraps Sentios \"loader:start_prepare_station\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>station</code> <code>LoaderStation</code> <p>The station to prepare.</p> required <code>angle</code> <code>float</code> <p>The prealignment angle. If None, no prealignment will be done.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>response</code> <code>Response</code> <p>A Response object.</p>"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.transfer_wafer","title":"<code>transfer_wafer(src_station, src_slot, dst_station, dst_slot)</code>","text":"<p>Transfer a wafer from one loader station to another.</p> <p>Parameters:</p> Name Type Description Default <code>src_station</code> <code>LoaderStation</code> <p>The source station.</p> required <code>src_slot</code> <code>int</code> <p>The source slot.</p> required <code>dst_station</code> <code>LoaderStation</code> <p>The destination station.</p> required <code>dst_slot</code> <code>int</code> <p>The destination slot.</p> required"},{"location":"LoaderCommandGroup/#sentio_prober_control.Sentio.CommandGroups.LoaderCommandGroup.LoaderCommandGroup.unload_wafer","title":"<code>unload_wafer()</code>","text":"<p>Unload the current wafer from the chuck.</p> <p>Wraps Sentios \"loader:unload_wafer\" remote command.</p>"},{"location":"ProbeCommandGroup/","title":"ProbeCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group contains functions for working with motorized prober. You are not meant to instantiate this class directly. Access it via the probe attribute of the SentioProber class.</p> <p>Example:</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\nprober = SentioProber.create_prober(\"tcpip\", \"127.0.0.1:35555\")\nprober.probe.move_probe_xy(ProbeSentio.East, ProbeXYReference.Current, 1000, 2000)\n</code></pre> <p>handler: python     options:         members:             ProbeCommandGroup</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.async_step_probe_site","title":"<code>async_step_probe_site(probe, idx)</code>","text":"<p>Start the process of stepping to a positioner site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command initiates a step to such a site. This is an asynchronous command use in conjunction with ProberSentio.wait_complete() or ProberSentio.query_command_status().</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to step.</p> required <code>idx</code> <code>int</code> <p>The index of the site to step to.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The async command id of the command.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.async_step_probe_site_first","title":"<code>async_step_probe_site_first(probe)</code>","text":"<p>Step to first probe site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command initiates a step to the first site. This is an asynchronous command use in conjunction with ProberSentio.wait_complete() or ProberSentio.query_command_status().</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to step.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The async command id of the command.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.async_step_probe_site_next","title":"<code>async_step_probe_site_next(probe)</code>","text":"<p>Step to next probe site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command initiates a step to the next site. This is an asynchronous command use in conjunction with ProberSentio.wait_complete() or ProberSentio.query_command_status().</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to step.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The async command id of the command.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.get_probe_site","title":"<code>get_probe_site(probe, idx)</code>","text":"<p>Get information for a probe site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command returns the data associated with a site.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to get the site for.</p> required <p>Returns:</p> Type Description <code>Tuple[int, str, float, float]</code> <p>A tuple containing the site index, the site name, the x position in micrometer and the y position in micrometer.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.get_probe_site_number","title":"<code>get_probe_site_number(probe)</code>","text":"<p>Returns the total number of probe sites set up.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command returns the total number of sites.</p> <p>Returns:</p> Type Description <code>int</code> <p>The total number of sites.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.get_probe_xy","title":"<code>get_probe_xy(probe, ref)</code>","text":"<p>Get probe xy position in micrometer.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to get the position for.</p> required <code>ref</code> <code>ProbeXYReference</code> <p>The position reference for the returned values.</p> required <p>Returns:</p> Type Description <code>Tuple[float, float]</code> <p>A tuple containing the x and y position in micrometer.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.get_probe_z","title":"<code>get_probe_z(probe, ref)</code>","text":"<p>Get probe z position in micrometer.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to get the position for.</p> required <code>ref</code> <code>ProbeZReference</code> <p>The position reference for the returned values.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The z position in micrometer.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.move_probe_contact","title":"<code>move_probe_contact(probe)</code>","text":"<p>Move a probe to its contact position.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to move.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The z position after the move in micrometer (from zero).</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.move_probe_home","title":"<code>move_probe_home(probe)</code>","text":"<p>Move probe to its home position.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to move.</p> required <p>Returns:</p> Type Description <code>Tuple[float, float]</code> <p>A tuple containing the x and y position after the move.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.move_probe_separation","title":"<code>move_probe_separation(probe)</code>","text":"<p>Move a probe to its separation position.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to move.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The z position after the move in micrometer (from zero).</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.move_probe_xy","title":"<code>move_probe_xy(probe, ref, x, y)</code>","text":"<p>Move probe to a given position.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to move.</p> required <code>ref</code> <code>ProbeXYReference</code> <p>The position reference for the submitted values.</p> required <code>x</code> <code>float</code> <p>The x position in micrometer.</p> required <code>y</code> <code>float</code> <p>The y position in micrometer.</p> required <p>Returns:</p> Type Description <code>Tuple[float, float]</code> <p>A tuple containing the x and y position after the move.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.move_probe_z","title":"<code>move_probe_z(probe, ref, z)</code>","text":"<p>Move probe to a given z position.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to move.</p> required <code>ref</code> <code>ProbeZReference</code> <p>The position reference for the submitted values.</p> required <code>z</code> <code>float</code> <p>The target z position in micrometer.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The z position after the move in micrometer (from zero).</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.set_probe_contact","title":"<code>set_probe_contact(probe, z=None)</code>","text":"<p>Set contact position of a positioner.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to set contact height.</p> required <code>z</code> <code>float | None</code> <p>The contact height in micrometer. If not specified, the current z position is used.</p> <code>None</code>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.set_probe_home","title":"<code>set_probe_home(probe, site=None, x=None, y=None)</code>","text":"<p>Set home position of a probe.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to set home position.</p> required <code>site</code> <code>ChuckSite | None</code> <p>The chuck site to set the home position for. If None is specified the current site is used.</p> <code>None</code> <code>x</code> <code>float | None</code> <p>The x position in micrometer. If not specified, the current x position is used.</p> <code>None</code> <code>y</code> <code>float | None</code> <p>The y position in micrometer. If not specified, the current y position is used.</p> <code>None</code>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.step_probe_site","title":"<code>step_probe_site(probe, idx)</code>","text":"<p>Step to a specific probe site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command initiates a step to such a site.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to step.</p> required <code>idx</code> <code>int</code> <p>The index of the site to step to.</p> required <p>Returns:</p> Type Description <code>Tuple[str, float, float]</code> <p>A tuple containing the site id, the x position in micrometer and the y position in micrometer.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.step_probe_site_first","title":"<code>step_probe_site_first(probe)</code>","text":"<p>Step to the first probe site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command initiates a step to the first site.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to step.</p> required <p>Returns:</p> Type Description <code>Tuple[str, float, float]</code> <p>A tuple containing the site id, the x position in micrometer and the y position in micrometer.</p>"},{"location":"ProbeCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ProbeCommandGroup.ProbeCommandGroup.step_probe_site_next","title":"<code>step_probe_site_next(probe)</code>","text":"<p>Step to the next probe site.</p> <p>Each positioner can define n a number of predefined positions called \"sites\". This command initiates a step to the next site.</p> <p>Parameters:</p> Name Type Description Default <code>probe</code> <code>ProbeSentio</code> <p>The probe to step.</p> required <p>Returns:</p> Type Description <code>Tuple[str, float, float]</code> <p>A tuple containing the site id, the x position in micrometer and the y position in micrometer.</p>"},{"location":"ProberException/","title":"ProberException","text":"<p>             Bases: <code>Exception</code></p> <p>A custom exception class for SENTIO's python package.</p> <p>All errors that occur in this package will be wrapped in this exception class.</p>"},{"location":"ProberException/#sentio_prober_control.Sentio.ProberBase.ProberException.__init__","title":"<code>__init__(msg, errc=-1)</code>","text":"<p>Create a new ProberException object.</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str</code> <p>The error message.</p> required <code>errc</code> <code>int</code> <p>The error code (optional). If no error code is set -1 is used.</p> <code>-1</code>"},{"location":"ProberException/#sentio_prober_control.Sentio.ProberBase.ProberException.error","title":"<code>error()</code>","text":"<p>Get error code.</p> <p>Returns:</p> Name Type Description <code>errc</code> <code>int</code> <p>The error code of the exception.</p>"},{"location":"ProberException/#sentio_prober_control.Sentio.ProberBase.ProberException.message","title":"<code>message()</code>","text":"<p>Returns the error message.</p> <p>Returns:</p> Name Type Description <code>errorcode</code> <code>str</code> <p>The error message.</p>"},{"location":"QalibriaCommandGroup/","title":"QAlibriaCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group contains functions for working with Qalibria.</p> <p>handler: python     options:         members:             QAlibriaCommandGroup</p>"},{"location":"QalibriaCommandGroup/#sentio_prober_control.Sentio.CommandGroups.QAlibriaCommandGroup.QAlibriaCommandGroup.calibration_drift_verify","title":"<code>calibration_drift_verify(dut_name='', auto_exec=True)</code>","text":"<p>Calibration Drift verification.</p> <p>Wraps SENTIO's \"qal:calibration_drift_verify\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>dut_name</code> <code>str</code> <p>The name of the dut.</p> <code>''</code> <code>auto_exec</code> <code>bool</code> <code>True</code>"},{"location":"QalibriaCommandGroup/#sentio_prober_control.Sentio.CommandGroups.QAlibriaCommandGroup.QAlibriaCommandGroup.calibration_execute","title":"<code>calibration_execute()</code>","text":"<p>Execute VNA calibration.</p> <p>Wraps SENTIO's \"qal:calibration_execute\" remote command.</p>"},{"location":"Response/","title":"Response","text":"<p>This class represents the response of a single SENTIO remote command.</p> <p>Sentio's remote command response is a comma separated string that contains three fields which represent 4 data items. (error code and status code are combined)</p> <p>handler: python     options:         members:             SentioProber</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.__init__","title":"<code>__init__(errc, stat, cmd_id, msg)</code>","text":"<p>Creates a new Response object.</p> <p>Parameters:</p> Name Type Description Default <code>errc</code> <code>int</code> <p>The error code.</p> required <code>stat</code> <code>int</code> <p>The status code.</p> required <code>cmd_id</code> <code>int</code> <p>The async command id. (only used by async commands)</p> required <code>msg</code> <code>str</code> <p>The response message.</p> required"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.check","title":"<code>check()</code>","text":"<p>Raises an exception if this response indicates an error.</p> <p>Raises:</p> Type Description <code>ProberException</code> <p>If the response indicates an error.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.check_resp","title":"<code>check_resp(str_resp)</code>  <code>staticmethod</code>","text":"<p>A static method that parses a response string and raises an exception if the response indicates an error.</p> <p>Parameters:</p> Name Type Description Default <code>str_resp</code> <code>str</code> <p>The response string to parse.</p> required <p>Returns:</p> Name Type Description <code>response</code> <code>Response</code> <p>A Response object created from the information in SENTIO's response string. If the response represents                  an error an exception is raised instead of returning a Response object.</p> <p>Raises:</p> Type Description <code>ProberException</code> <p>If the response indicates an error.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.cmd_id","title":"<code>cmd_id()</code>","text":"<p>The async commans id returned by SENTIO.</p> <p>If the remote command is not an async command 0 is returned.</p> <p>Returns:</p> Name Type Description <code>cmd_id</code> <code>int</code> <p>The async command id returned by SENTIO.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.errc","title":"<code>errc()</code>","text":"<p>The error code returned by SENTIO.</p> <p>The meaning of the error code is documented in the SENTIO's remote command documentation. It is also used by the enumerator RemoteCommandError.</p> <p>Returns:</p> Name Type Description <code>errc</code> <code>int</code> <p>The error code returned by SENTIO.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.message","title":"<code>message()</code>","text":"<p>The response message returned by SENTIO.</p> <p>Returns:</p> Name Type Description <code>msg</code> <code>str</code> <p>The response message returned by SENTIO.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.ok","title":"<code>ok()</code>","text":"<p>Returns True if the response indicates no error.</p> <p>Returns:</p> Name Type Description <code>ok</code> <code>bool</code> <p>True if the response indicates no error, False otherwise.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.parse_resp","title":"<code>parse_resp(resp)</code>  <code>staticmethod</code>","text":"<p>A static method that parses a SENTIO remote command response string and returns a Response object.</p> <p>A typical response from SENTIO to a remote command might look like \"0,0,ok\" SENTIO's remote command responses are strings that contain multiple items separated by two commas.</p> <ul> <li>error code and status information (combined in one integer)</li> <li>an async command id (only used by async commands)</li> <li>a response message</li> </ul> <p>Returns:</p> Name Type Description <code>response</code> <code>Resppnse</code> <p>A Response object created from the information in SENTIO's response string.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.print","title":"<code>print()</code>","text":"<p>Prints the content of the response object to the console.</p>"},{"location":"Response/#sentio_prober_control.Sentio.ProberSentio.Response.status","title":"<code>status()</code>","text":"<p>The status coode extracted from the response.</p> <p>Returns:</p> Name Type Description <code>stat</code> <code>int</code> <p>The status code returned by SENTIO.</p>"},{"location":"SentioProber/","title":"SentioProber","text":"<p>             Bases: <code>ProberBase</code></p> <p>This class represents the SENTIO probe station in python. It provides wrapper for most of the remote commands exposed by SENTIO.</p> <p>Attributes:</p> Name Type Description <code>aux</code> <code>AuxCommandGroup</code> <p>The aux command group provides access the the aux site modules functionality.</p> <code>loader</code> <code>LoaderCommandGroup</code> <p>The loader command group provides access to the loader modules functionality.</p> <code>map</code> <code>WafermapCommandGroup</code> <p>The wafermap command group provides access to the wafermap modules functionality.</p> <code>probe</code> <code>ProbeCommandGroup</code> <p>The probe command group provides access to the probe modules functionality.</p> <code>qalibria</code> <code>QAlibriaCommandGroup</code> <p>The qalibria command group provides access to the qalibria modules functionality.</p> <code>service</code> <code>ServiceCommandGroup</code> <p>The service command group provides access to the service modules functionality.</p> <code>siph</code> <code>SiPHCommandGroup</code> <p>The siph command group provides access to the SiPH modules functionality.</p> <code>status</code> <code>StatusCommandGroup</code> <p>The status command group provides access to the dashboard modules functionality. (formerly called status module)</p> <code>vision</code> <code>VisionCommandGroup</code> <p>The vision command group provides access to the vision modules functionality.</p> <p>handler: python     options:         members:             SentioProber</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.__init__","title":"<code>__init__(comm)</code>","text":"<p>Construct a SENTIO prober object.</p> <p>The prober must be initialized with a communication object that specifies how the system communicates with the probe station.</p> <p>Parameters:</p> Name Type Description Default <code>comm</code> <code>CommunicatorBase</code> <p>The communicator to use for communication with the prober.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.abort_command","title":"<code>abort_command(cmd_id)</code>","text":"<p>Stop an ongoing asynchronous remote command.</p> <p>Parameters:</p> Name Type Description Default <code>cmd_id</code> <code>int</code> <p>The id of the async command to abort.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.clear_contact","title":"<code>clear_contact(site=None)</code>","text":"<p>Clear contact positions.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to clear. If None is given all sites will be cleared.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.create_prober","title":"<code>create_prober(comm_type, arg1='127.0.0.1:35555', arg2='')</code>  <code>staticmethod</code>","text":"<p>Create an instance of a SentioProber object that is bound to a certain communication method. Your choices of communication are tcpip, gpib and visa.</p> <p>Parameters:</p> Name Type Description Default <code>comm_type</code> <code>str</code> <p>The type of communication to use. Valid values are \"tcpip\", \"gpib\" and \"visa\".</p> required <code>arg1</code> <code>object</code> <p>For tcpip this is a single string specifying address and port             like \"127.0.0.1:35555\". For visa this is the address of the device like \"GPIB0::20::INSTR\". For gpib two parameters are needed.             The first one is the type of driver/card installed in the system, the second parameter is the address of the device like \"GPIB0:20\".</p> <code>'127.0.0.1:35555'</code> <code>arg2</code> <code>str</code> <p>Only used for gpib communication. This is the GPIB address of the prober i.e. \"GPIB0:20\".</p> <code>''</code>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.enable_chuck_hover","title":"<code>enable_chuck_hover(stat)</code>","text":"<p>Enable chuck hover height.</p> <p>The Hover height is a height that is significantly closer to the chuck compared to the separation height. It is closer to the wafer but it is not safe for fast or long chuck moves as the chuck may be slightly tilted.</p> <p>This function wraps SENTIO's \"enable_chuck_hover\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>stat</code> <code>bool</code> <p>True to enable, False to disable.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.enable_chuck_overtravel","title":"<code>enable_chuck_overtravel(stat)</code>","text":"<p>Enable chuck overtravel.</p> <p>This function wraps SENTIO's \"enable_chuck_overtravel\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>stat</code> <code>bool</code> <p>True to enable, False to disable.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.enable_chuck_site_hover","title":"<code>enable_chuck_site_hover(site, stat)</code>","text":"<p>Enable chuck site hover height.</p> <p>The Hover height is a height that is significantly closer to the chuck compared to the separation height. It is closer to the wafer but it is not safe for fast or long chuck moves as the chuck may be slightly tilted.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to enable hover height for.</p> required <code>stat</code> <code>bool</code> <p>True to enable, False to disable.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.enable_chuck_site_overtravel","title":"<code>enable_chuck_site_overtravel(site, stat)</code>","text":"<p>Enable overtravel distance for a specific chuck site.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to enable overtravel distance for.</p> required <code>stat</code> <code>bool</code> <p>True to enable, False to disable.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.file_transfer","title":"<code>file_transfer(source, dest)</code>","text":"<p>Transfer a file to the prober.</p> <p>This function will transfer a file to the prober. The file will be stored in the position specified by the dest argument. Transmission of the file may take some time.</p> <p>Parameters:</p> Name Type Description Default <code>source</code> <code>str</code> <p>The path to the file to transfer.</p> required <code>dest</code> <code>str</code> <p>The destination path on the prober. Must be a complete path including file name. Make sure that SENTIO has write access to the given destination.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_chuck_site_height","title":"<code>get_chuck_site_height(site)</code>","text":"<p>Retrieves height information of a chuck site</p> <p>Example:</p> <pre><code>contact, separation, overtravel_dist, hover_gap = get_chuck_site_height(ChuckSite.Wafer)\n</code></pre> <p>Gets for chuck site \"Wafer\" contact height, separation heights ,overtravel distance and hover height</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to query.</p> required <p>Returns:</p> Name Type Description <code>contact</code> <code>float</code> <p>contact height</p> <code>separation</code> <code>float</code> <p>separation gap</p> <code>overtravel_dist</code> <code>float</code> <p>overtravel distance</p> <code>hover_gap</code> <code>float</code> <p>hover gap</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_chuck_site_status","title":"<code>get_chuck_site_status(site)</code>","text":"<p>Get status of a chuck site.</p> <p>Wraps SENTIO's \"get_chuck_site_status\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to query.</p> required <p>Returns:</p> Name Type Description <code>hasHome</code> <code>bool</code> <p>True if the chuck site has a home position.</p> <code>hasContact</code> <code>bool</code> <p>True if the chuck site has a contact position.</p> <code>overtravelActive</code> <code>bool</code> <p>True if the overtravel is active.</p> <code>vacuumOn</code> <code>bool</code> <p>True if the vacuum is on.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_chuck_theta","title":"<code>get_chuck_theta(site)</code>","text":"<p>Get the current angle of the chuck.</p> <p>Wraps SENTIO's \"get_chuck_theta\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to query.</p> required <p>Raises:</p> Type Description <code>ProberException</code> <p>If no available port is found.</p> <p>Returns:</p> Name Type Description <code>angle</code> <code>float</code> <p>The current angle of the chuck site in degrees.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_chuck_xy","title":"<code>get_chuck_xy(site, ref)</code>","text":"<p>Get current chuck xy position with respect to a given reference.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to query.</p> required <code>ref</code> <code>ChuckXYReference</code> <p>The reference to use for the query.</p> required <p>Returns:</p> Name Type Description <code>x</code> <code>float</code> <p>x position in micrometer.</p> <code>y</code> <code>float</code> <p>y position in micrometer.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_chuck_z","title":"<code>get_chuck_z(ref)</code>","text":"<p>Get chuck z position.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>ChuckZReference</code> <p>The reference to use for the query.</p> required <p>Returns:</p> Name Type Description <code>height</code> <code>float</code> <p>The actual z position of the chuck in micrometer (from axis zero).</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_project","title":"<code>get_project(pfi=ProjectFileInfo.FullPath)</code>","text":"<p>Get the name of the current project.</p> <p>Parameters:</p> Name Type Description Default <code>pfi</code> <code>ProjectFileInfo</code> <p>The type of information to get.</p> <code>FullPath</code> <p>Returns:</p> Name Type Description <code>project_name</code> <code>str</code> <p>The name of the current project.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_scope_site","title":"<code>get_scope_site(idx)</code>","text":"<p>Get scope site data.</p> <pre><code>This command queries the name and position of a scope site. The index is zero based.\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the site to query.</p> required <p>Returns:</p> Name Type Description <code>num</code> <code>int</code> <p>The number of defined scope sites.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_scope_site_num","title":"<code>get_scope_site_num()</code>","text":"<p>Get total number of scope sites.</p> <p>The scope stage can store a list of sites. Each site has a position and a name. This function returns the number of defined scope sites.</p> <p>Returns:</p> Name Type Description <code>num</code> <code>int</code> <p>The number of defined scope sites.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_scope_xy","title":"<code>get_scope_xy()</code>","text":"<p>Get current scope xy position.</p> <p>The returned position is an absolute position with respect to the axis zero in micrometer.</p> <p>Returns:</p> Name Type Description <code>x</code> <code>float</code> <p>The current x position in micrometer.</p> <code>y</code> <code>float</code> <p>The current y position in micrometer.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.get_scope_z","title":"<code>get_scope_z()</code>","text":"<p>Get scope z position in micrometer from axis zero.</p> <p>Returns:</p> Name Type Description <code>height</code> <code>float</code> <p>The z position in micrometer.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.has_chuck_xyz","title":"<code>has_chuck_xyz()</code>","text":"<p>Returns True if the chuck has xyz axes.</p> <p>Returns:</p> Name Type Description <code>has_xyz</code> <code>bool</code> <p>True if the chuck has xyz axes.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.has_scope_xyz","title":"<code>has_scope_xyz()</code>","text":"<p>Returns True if the scope has xyz axes.</p> <p>Returns:</p> Name Type Description <code>has_xyz</code> <code>bool</code> <p>True if the scope has xyz axes.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.has_scope_z","title":"<code>has_scope_z()</code>","text":"<p>Returns true if the microscope has a motorized z axis.</p> <p>Returns:</p> Type Description <code>bool</code> <p>True if the scope has z axes.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.initialize_if_needed","title":"<code>initialize_if_needed()</code>","text":"<p>Initialize the prober if it is not already initialized.</p> <p>This command will check if the prober is already initialized. If not it will start the initialization process and wait for it to complete.</p> <p>You do not have to call waitcomplete after this function on your own!</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.local_mode","title":"<code>local_mode()</code>","text":"<p>Switch the prober back into local mode.</p> <p>The probe station will automatically enter remote mode when a remote command is received. It will remian in remote mode even after the script is finished. This command can be used to switch the machine back into local mode and thus enable its UI.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_contact","title":"<code>move_chuck_contact()</code>","text":"<p>Move the chuck to contact height.</p> <p>Wraps SENTIO's \"move_chuck_contact\" remote command.</p> <p>Returns:</p> Name Type Description <code>height</code> <code>float</code> <p>The contact height in micrometer from chuck z axis zero.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_home","title":"<code>move_chuck_home()</code>","text":"<p>Move chuck to its home position.</p> <p>Returns:</p> Name Type Description <code>x</code> <code>float</code> <p>The x position in micrometer.</p> <code>y</code> <code>float</code> <p>The y position in micrometer.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_load","title":"<code>move_chuck_load(pos)</code>","text":"<p>Move chuck to load position.</p> <p>Wraps SENTIO's \"move_chuck_load\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>pos</code> <code>LoadPosition</code> <p>The load position to move to.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_separation","title":"<code>move_chuck_separation()</code>","text":"<p>Move the chuck to separation height.</p> <p>Returns:</p> Type Description <code>float</code> <p>The separation height in micrometer from chuck z axis zero.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_site","title":"<code>move_chuck_site(site)</code>","text":"<p>Moves chuck to the last active position of the selected chuck site.</p> <p>Wraps SENTIO's \"move_chuck_site\" remote command.</p> <p>Returns:</p> Name Type Description <code>x</code> <code>float</code> <p>The x position in micrometer.</p> <code>y</code> <code>float</code> <p>The y position in micrometer.</p> <code>z</code> <code>float</code> <p>The z height in micrometer.</p> <code>theta</code> <code>float</code> <p>The theta angle in degrees.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_theta","title":"<code>move_chuck_theta(ref, angle)</code>","text":"<p>Move chuck theta axis to a given angle.</p> <p>Wraps SENTIO's \"move_chuck_theta\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>ChuckThetaReference</code> <p>The reference to use for the move.</p> required <code>angle</code> <code>float</code> <p>The angle to move to in degrees.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_work_area","title":"<code>move_chuck_work_area(area)</code>","text":"<p>Move the chuck to a given work area.</p> <p>A SENTIO probe station can have different work areas. One area is for probing. This is the default work area and present on all probe stations. When the chuck is at probing position is is roughly centered with respect to the platen and located in a space were probes can go into contact. Depending on the machine type a prober may be equipped with a second work area. This area is located under an optional off-axis camera. The off-axis camera allows inspection of the wafer when the scope camera view is blocked by certain probe card types.</p> <p>This function wraps SENTIO's \"move_chuck_work_area\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>area</code> <code>WorkArea</code> <p>The work area to move to.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_xy","title":"<code>move_chuck_xy(ref, x, y)</code>","text":"<p>Move chuck to a given xy position.</p> <p>Wraps SENTIO's \"move_chuck_xy\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>ChuckXYReference</code> <p>The reference to use for the move.</p> required <code>x</code> <code>float</code> <p>The x position to move to in micrometer.</p> required <code>y</code> <code>float</code> <p>The y position to move to in micrometer.</p> required <p>Returns:</p> Name Type Description <code>x</code> <code>float</code> <p>The chuck x position after the move in micrometer (from zero)</p> <code>y</code> <code>float</code> <p>The chuck y position after the move in micrometer (from zero)</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_chuck_z","title":"<code>move_chuck_z(ref, z)</code>","text":"<p>Move chuck to a given z position.</p> <p>Wraps SENTIO's \"move_chuck_z\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>ChuckZReference</code> <p>The z-reference to use for the move.</p> required <code>z</code> <code>float</code> <p>The z position to move to in micrometer.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The actual z position in micrometer after the move.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_scope_lift","title":"<code>move_scope_lift(state)</code>","text":"<p>Move scope to its lift position.</p> <p>The scope lift position is a position where the scope is at its axis maximum. This position will give you the maximum possible are of unhindered operation when changing probe cards or other maintenance tasks.</p> <p>Parameters:</p> Name Type Description Default <code>state</code> <code>bool</code> <p>True to move to the lift position, False to move away from the lift position.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_scope_xy","title":"<code>move_scope_xy(ref, x, y)</code>","text":"<p>Move scope to a given xy position.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>ScopeXYReference</code> <p>The reference to use for the move.</p> required <code>x</code> <code>float</code> <p>The x position to move to in micrometer.</p> required <code>y</code> <code>float</code> <p>The y position to move to in micrometer.</p> required <p>Returns:</p> Name Type Description <code>x</code> <code>float</code> <p>Scope x position after the move in micrometers (from zero)</p> <code>y</code> <code>float</code> <p>Scope x position after the move in micrometers (from zero)</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_scope_z","title":"<code>move_scope_z(ref, z)</code>","text":"<p>Move scope to a given z position.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>ScopeZReference</code> <p>The reference to use for the move.</p> required <code>z</code> <code>float</code> <p>The z position to move to in micrometer.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The actual z position in micrometer after the move.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.move_vce_z","title":"<code>move_vce_z(stage, ref, z)</code>","text":"<p>Move VCE stage to a given z position.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>VceZReference</code> <p>The reference to use for the move.</p> required <code>z</code> <code>float</code> <p>The z position to move to in micrometer.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The actual z position in micrometer after the move.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.name","title":"<code>name()</code>","text":"<p>Returns the name of the prober.</p> <p>Returns:</p> Type Description <code>str</code> <p>This function will always return the string \"SentioProber\".</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.open_project","title":"<code>open_project(project, restore_heights=False)</code>","text":"<p>Open a SENTIO project file.</p> <p>Wraps SENTIO's \"open_project\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>project</code> <code>str</code> <p>The name or path of the project to open. If a full      path to the trex project file is given SENTIO will try to open this file.      If the argument does not contain a path SENTIO will look in its default      project folder for a matching project and open it.</p> required <code>restore_heights</code> <code>bool</code> <p>If set to true SENTIO will restore the contact              heights from the project. Be carefull when using this option because              the contact heights may have been become invalid since creating the project              due to a probe card change.</p> <code>False</code>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.query_command_status","title":"<code>query_command_status(cmd_id)</code>","text":"<p>Query the status of an async command.</p> <p>This command will send a query to the prober to get the status of an async command. The submitted command id must be a valid id of an async command that was previously started at the prober.</p> <p>When an async command is being executed SENTIO can receive other remnote commands. This command is intended to be used in a polling loop to query the status of ongoing remote commands.</p> <p>Example:</p> <pre><code>while True:\n    time.sleep(1)\n    resp = prober.query_command_status(cmd_id)\n    if (resp.errc()!=RemoteCommandError.CommandPending):\n        break;</code></pre> <p>Parameters:</p> Name Type Description Default <code>cmd_id</code> <code>int</code> <p>The id of the async command to query.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.save_config","title":"<code>save_config()</code>","text":"<p>Save the SENTIO configuration file.</p> <p>Wraps SENTIO's \"save_config\" remote command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.save_project","title":"<code>save_project(project)</code>","text":"<p>Save the current SENTIO project.</p> <p>Wraps SENTIO's \"save_project\" remote command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.select_module","title":"<code>select_module(module, tabSheet=None)</code>","text":"<p>Activate a given SENTIO module.</p> <p>In response to this function SENTIO will switch its user interface to make the given module the active one.</p> <p>This function wraps the \"select_module\" remote command of SENTIO.</p> <p>Parameters:</p> Name Type Description Default <code>module</code> <code>Module</code> <p>The module to activate.</p> required <code>tabSheet</code> <code>str | None</code> <p>The name of the module tab to activate. If None is given the default tab will be activated.</p> <code>None</code>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.send_cmd","title":"<code>send_cmd(cmd)</code>","text":"<p>Sends a command to the prober and return a response object.</p> <p>This function is intended for directly sending remote commands that are not yet included in the python wrapper. It will send the command and parse the respone from SENTIO.</p> <p>Do NOT send low level commands that do not have a response (i.e. \"*LOCAL\"). This will lock the communication pipeline as it is waiting for a response that never arrives.</p> <p>It will then return a Response object with the extracted data from SENTIO's response.</p> <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.set_chuck_site_height","title":"<code>set_chuck_site_height(site, contact, separation, overtravel_dist, hover_gap)</code>","text":"<p>Sets z position information of a chuck site</p> <p>Example:</p> <pre><code>prober.set_chuck_site_height(ChuckSite.Wafer,16000,250,20,50)\n</code></pre> <p>Will set the contact height of the wafer site to 16000 \u00b5m with a separation height of 250 \u00b5m an overtravel of 20 and a hover height of 50</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to query.</p> required <code>contact</code> <code>float</code> <p>The new contact height in micrometer.</p> required <code>separation</code> <code>float</code> <p>The new separation height in micrometer.</p> required <code>overtravel_dist</code> <code>float</code> <p>The new overtravel distance in micrometer.</p> required <code>hover_gap</code> <code>float</code> <p>The new hover gap in micrometer.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.set_ink","title":"<code>set_ink(idx_inker)</code>","text":"<p>Trigger the inker device.</p> <pre><code>Wraps SENTIO's \"set_ink\" remote command.\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>idx_inker</code> <code>int</code> <p>The index of the inker to trigger. The index is one based (use either 1 or 2).</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.set_stepping_contact_mode","title":"<code>set_stepping_contact_mode(mode)</code>","text":"<p>Change the stepping contact mode.</p> <p>The stepping contact mode defines what happens during stepping over a wafer. The following modes are available:</p> <ul> <li>BackToContact: The chuck will step into contact position</li> <li>StepToSeparation: The chuck will step into separation position. You have to move into contact with a seaparate command.</li> <li>LockContack: The Chuck is not allowed to leave contact position automatically as part of a stepping command. You have to move into separation with a separate command bevore being able to step to the next die..</li> </ul> <p>Parameters:</p> Name Type Description Default <code>mode</code> <code>SteppingContactMode</code> <p>The stepping contact mode to set.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.set_vacuum","title":"<code>set_vacuum(site, stat)</code>","text":"<p>Switches the vacuum of a chuck site on or off.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>ChuckSite</code> <p>The chuck site to switch the vacuum for.</p> required <code>stat</code> <code>bool</code> <p>True to switch the vacuum on, False to switch it off.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.show_hint","title":"<code>show_hint(msg, subtext)</code>","text":"<p>Show an on screen message (hint) and return immediately</p> <p>Hints are on screen messages that pop up in SENTIO's lower left corner. This hint will disappears automatically after a few seconds.</p> <p>This function wraps SENTIO's \"status:show_hint\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str</code> <p>The message to display.</p> required <code>subtext</code> <code>str</code> <p>The subtext to display.</p> required"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.show_hint_and_wait","title":"<code>show_hint_and_wait(msg, subtext, button_caption, timeout=180, lock_ui=True)</code>","text":"<p>Show an on screen message with a button wait for a button to be pressed.</p> <p>Hints pop up in SENTIO's lower left corner. This function will display a hint with a button and only return once the button has been pressed.</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str</code> <p>The message to display.</p> required <code>subtext</code> <code>str</code> <p>The subtext to display. Subtext is displayed in a second line with a slightly smaller font.</p> required <code>button_caption</code> <code>str</code> <p>The caption of the button.</p> required <code>timeout</code> <code>int</code> <p>An optional timeout in seconds after which the dialog will be closed automatically. (default = 180 s)</p> <code>180</code> <code>lock_ui</code> <code>bool</code> <p>An optional flag that determines wether the UI shall be locked. Most of the UI is disabled in      remote mode anyway. This button affects only the on screen interactions on the right side of the main      module view. (default = True)</p> <code>True</code>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.show_message","title":"<code>show_message(msg, buttons, caption, dialog_timeout=180)</code>","text":"<p>Pop up a message dialog in SENTIO and wait for the result.</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str</code> <p>The message to display.</p> required <code>buttons</code> <code>DialogButtons</code> <p>The buttons to display.</p> required <code>caption</code> <code>str</code> <p>The caption of the message box.</p> required <code>dialog_timeout</code> <code>int</code> <p>An optional dialog timeout in seconds after which the dialog will be closed automatically.</p> <code>180</code> <p>Returns:</p> Type Description <code>DialogButtons</code> <p>The button that was as an DialogButtons enum value.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.start_initialization","title":"<code>start_initialization()</code>","text":"<p>Start the initialization of the probe station.</p> <p>This function will start the initialization of the prober. This is an async command that will return immediately.</p> <p>The initialization process will take some time to complete. Use waitcomplete to wait for the initialization to complete.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.wait_all","title":"<code>wait_all(timeout=90)</code>","text":"<p>Wait until all async commands have finished.</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>int</code> <p>The timeout in seconds.</p> <code>90</code> <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"SentioProber/#sentio_prober_control.Sentio.ProberSentio.SentioProber.wait_complete","title":"<code>wait_complete(id_or_resp, timeout=300)</code>","text":"<p>Wait for a single async command to complete.</p> <p>Parameters:</p> Name Type Description Default <code>cmd_id</code> <p>The id of the async command to wait for.</p> required <code>timeout</code> <code>int</code> <p>The timeout in seconds.</p> <code>300</code> <p>Returns:</p> Type Description <code>Response</code> <p>A response object with the result of the command.</p>"},{"location":"ServiceCommandGroup/","title":"ServiceCommandGroup","text":"<p>             Bases: <code>ModuleCommandGroupBase</code></p> <p>A command group for accessing service module functions.</p> <p>handler: python     options:         members:             ServiceCommandGroup</p>"},{"location":"ServiceCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ServiceCommandGroup.ServiceCommandGroup.set_compensation_mode","title":"<code>set_compensation_mode(status)</code>","text":"<p>Turn chuck compensation on or off.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>bool</code> <p>True to turn on, False to turn off.</p> required <p>Returns:</p> Type Description <code>None</code> <p>A Response object.</p>"},{"location":"ServiceCommandGroup/#sentio_prober_control.Sentio.CommandGroups.ServiceCommandGroup.ServiceCommandGroup.set_software_fence","title":"<code>set_software_fence(fence)</code>","text":"<p>Set the software fence.</p> <p>The software fence is a virtual fence that is used to limit the movement of the chuck. The fences purpose is to prevent the chuck from moving into physical obstructions such as the machine casing or other hardware.</p> <p>Parameters:</p> Name Type Description Default <code>fence</code> <code>SoftwareFence</code> <p>The type of fence to use.</p> required <p>Returns:</p> Type Description <code>None</code> <p>A Response object.</p>"},{"location":"SiPHCommandGroup/","title":"SiPHCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group contains functions for working with SiPH applications. You are not meant to instantiate this class directly. Access it via the siph attribute of the SentioProber class.</p> <p>handler: python     options:         members:             SiPHCommandGroup</p>"},{"location":"SiPHCommandGroup/#sentio_prober_control.Sentio.CommandGroups.SiPHCommandGroup.SiPHCommandGroup.fast_alignment","title":"<code>fast_alignment()</code>","text":"<p>Perform fast fiber alignment.</p>"},{"location":"SiPHCommandGroup/#sentio_prober_control.Sentio.CommandGroups.SiPHCommandGroup.SiPHCommandGroup.get_cap_sensor","title":"<code>get_cap_sensor()</code>","text":"<p>Get the capacitance sensor value.</p> <p>:raises: ProberException if an error occured. :return: A tuple with the values from the capacity sensors of probe 1 and probe 2.</p>"},{"location":"SiPHCommandGroup/#sentio_prober_control.Sentio.CommandGroups.SiPHCommandGroup.SiPHCommandGroup.get_intensity","title":"<code>get_intensity()</code>","text":"<p>Get the current intensity value.</p> <p>:raises: ProberException if an error occured. :returns: The intensity value.</p>"},{"location":"SiPHCommandGroup/#sentio_prober_control.Sentio.CommandGroups.SiPHCommandGroup.SiPHCommandGroup.gradient_search","title":"<code>gradient_search()</code>","text":"<p>Execute SiPh gradient search.</p> <p>:raises: ProberException if an error occured.</p>"},{"location":"SiPHCommandGroup/#sentio_prober_control.Sentio.CommandGroups.SiPHCommandGroup.SiPHCommandGroup.move_hover","title":"<code>move_hover(probe)</code>","text":"<p>Move SiPh probe to hover height.</p> <p>:param probe: The probe on which the SiPh probe is mounted. :raises: ProberException if an error occured.</p>"},{"location":"SiPHCommandGroup/#sentio_prober_control.Sentio.CommandGroups.SiPHCommandGroup.SiPHCommandGroup.move_separation","title":"<code>move_separation(probe)</code>","text":"<p>Move SiPh probe to separation height.</p> <p>:param probe: The probe on which the SiPh probe is mounted. :raises: ProberException if an error occured.</p>"},{"location":"StatusCommandGroup/","title":"StatusCommandGroup","text":"<p>             Bases: <code>ModuleCommandGroupBase</code></p> <p>A command group for getting the status of the probe station and controlling the dashboard module.</p> <p>handler: python     options:         members:             StatusCommandGroup</p>"},{"location":"StatusCommandGroup/#sentio_prober_control.Sentio.CommandGroups.StatusCommandGroup.StatusCommandGroup.get_chuck_temp","title":"<code>get_chuck_temp()</code>","text":"<p>Get current chuck temperature.</p> <p>Returns:</p> Type Description <code>float</code> <p>The chuck temperature in degrees Celsius.</p>"},{"location":"StatusCommandGroup/#sentio_prober_control.Sentio.CommandGroups.StatusCommandGroup.StatusCommandGroup.get_chuck_temp_setpoint","title":"<code>get_chuck_temp_setpoint()</code>","text":"<p>Get current chuck temperature setpoint.</p> <p>Returns:</p> Type Description <code>float</code> <p>The chuck temperature setpoint in degrees Celsius.</p>"},{"location":"StatusCommandGroup/#sentio_prober_control.Sentio.CommandGroups.StatusCommandGroup.StatusCommandGroup.get_chuck_thermo_state","title":"<code>get_chuck_thermo_state()</code>","text":"<p>Return thermo chuck state.</p> <p>Returns:</p> Type Description <code>ThermoChuckState</code> <p>A tuple with the current state of the thermo chuck. Contains six boolean variables:</p> <code>ThermoChuckState</code> <p>isCooling, isHeating, isControlling, isStandby, isError, isUncontrolled.</p>"},{"location":"StatusCommandGroup/#sentio_prober_control.Sentio.CommandGroups.StatusCommandGroup.StatusCommandGroup.get_machine_status","title":"<code>get_machine_status()</code>","text":"<p>Get machine status.</p> <p>Returns:</p> Type Description <code>Tuple[bool, bool, bool]</code> <p>A tuple with the current status of the machine. Contains three boolean variables: isInitialized, isMeasuring, LoaderBusy.</p>"},{"location":"StatusCommandGroup/#sentio_prober_control.Sentio.CommandGroups.StatusCommandGroup.StatusCommandGroup.get_soaking_time","title":"<code>get_soaking_time(temperature)</code>","text":"<p>Get the thermochuck soaking time in seconds that is set up for a certain temperature in the dashboard.</p> <p>Parameters:</p> Name Type Description Default <code>temperature</code> <code>float</code> <p>The temperature. This temperature value must be one of the predefined temperature   values set up in the dashboard.</p> required <p>Raises:</p> Type Description <code>ProberException</code> <p>With error code 200 is thrown when the temperature is not a predefined value set up in the dashboard.</p> <p>Returns:</p> Type Description <p>The soaking time in seconds.</p>"},{"location":"StatusCommandGroup/#sentio_prober_control.Sentio.CommandGroups.StatusCommandGroup.StatusCommandGroup.set_chuck_temp","title":"<code>set_chuck_temp(temp)</code>","text":"<p>Set chuck temperature setpoint.</p> <p>Parameters:</p> Name Type Description Default <code>temp</code> <code>float</code> <p>The chuck temperature setpoint in degrees Celsius.</p> required"},{"location":"VisionCameraCommandGroup/","title":"VisionCameraCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>A command group for setting camera parameters.</p> <p>You are not meant to instantiate this class directly. Access it via the camera attribute of the vision attribute of the SentioProber class.</p> <p>handler: python     options:         members:             VisionCameraCommandGroup</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.get_calib","title":"<code>get_calib(mp)</code>","text":"<p>Get the calibration data of the camera.</p> <p>Camera calibration data consists of the width and height of an image pixel in micrometers.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <p>Returns:</p> Name Type Description <code>width</code> <code>float</code> <p>Get the width of a camera pixel in micrometers.</p> <code>height</code> <code>float</code> <p>Get height of a camera pixel in micrometers.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.get_exposure","title":"<code>get_exposure(mp)</code>","text":"<p>Get exposure time.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The exposure time in microseconds.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.get_focus_value","title":"<code>get_focus_value(mp, alg)</code>","text":"<p>Get the focus value of the camera.</p> <p>This function wraps the vis:get_focus_value remote command.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <code>alg</code> <code>AutoFocusAlgorithm</code> <p>The autofocus algorithm to use.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The focus value.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.get_gain","title":"<code>get_gain(mp)</code>","text":"<p>Get gain of the camera.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The gain value.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.get_image_size","title":"<code>get_image_size(mp)</code>","text":"<p>Get size of the image.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <p>Returns:</p> Name Type Description <code>width</code> <code>int</code> <p>The width of the image in pixels.</p> <code>height</code> <code>int</code> <p>The height of the image in pixels.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.get_light","title":"<code>get_light(mp)</code>","text":"<p>Get light intensity.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.is_pattern_trained","title":"<code>is_pattern_trained(mp, pat)</code>","text":"<p>Check if a pattern is trained.</p> <p>This command wraps the vis:pattern:is_trained remote command.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if the pattern is trained, False otherwise.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.set_exposure","title":"<code>set_exposure(mp, value)</code>","text":"<p>Set exposure time of the camera.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <code>value</code> <code>int</code> <p>The exposure time in microseconds.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.set_gain","title":"<code>set_gain(mp, value)</code>","text":"<p>Set gain of the camera.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <code>value</code> <code>float</code> <p>The gain value.</p> required"},{"location":"VisionCameraCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCameraCommandGroup.VisionCameraCommandGroup.set_light","title":"<code>set_light(mp, value)</code>","text":"<p>Set intensity of the light.</p> <p>Parameters:</p> Name Type Description Default <code>mp</code> <code>CameraMountPoint</code> <p>The mount point of the camera.</p> required <code>value</code> <code>int</code> <p>The intensity of the light.</p> required"},{"location":"VisionCommandGroup/","title":"VisionCommandGroup","text":"<p>             Bases: <code>ModuleCommandGroupBase</code></p> <p>This command group contains functions for working with SENTIO's vision module. You are not meant to instantiate this class directly. Access it via the vision attribute of the SentioProber class.</p> <p>Attributes:</p> Name Type Description <code>camera</code> <code>VisionCameraCommandGroup</code> <p>A subgroup to provide logic for camera specific functions.</p> <code>imagpro</code> <code>VisionIMagProCommandGroup</code> <p>A subgroup to provide logic for IMagPro specific functions.</p> <code>compensation</code> <code>VisionCompensationGroup</code> <p>A subgroup to provide logic for compensation specific functions.</p> <p>handler: python     options:         members:             VisionCommandGroup</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.align_die","title":"<code>align_die(threshold=0.05)</code>","text":"<p>Perform a die alignment.</p> <p>Die alignment compensates for positional differences when working with diced wafers which contain single dies.</p> <p>Parameters:</p> Name Type Description Default <code>threshold</code> <code>float</code> <p>The alignment threshold.</p> <code>0.05</code> <p>Returns:</p> Type Description <code>Tuple[float, float, float]</code> <p>A tuple with the x, y and theta offset in micrometer.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.align_wafer","title":"<code>align_wafer(mode)</code>","text":"<p>Perform a wafer alignment.</p> <p>Parameters:</p> Name Type Description Default <code>mode</code> <code>AutoAlignCmd</code> <p>The alignment procedure to use.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.auto_focus","title":"<code>auto_focus(af_cmd=AutoFocusCmd.Focus)</code>","text":"<p>Perform an auto focus operation.</p> <p>Parameters:</p> Name Type Description Default <code>af_cmd</code> <code>AutoFocusCmd</code> <p>The auto focus command to execute.</p> <code>Focus</code> <p>Returns:</p> Type Description <code>float</code> <p>The focus height in micrometer</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.detect_probetips","title":"<code>detect_probetips(camera, detector=DetectionAlgorithm.ProbeDetector, coords=DetectionCoordindates.Roi)</code>","text":"<p>Executes a built in detector on a given camera and return a list of detection results.</p> <p>Parameters:</p> Name Type Description Default <code>camera</code> <code>CameraMountPoint</code> <p>The camera to use for detection.</p> required <code>detector</code> <code>DetectionAlgorithm</code> <p>The detection algorithm to use.</p> <code>ProbeDetector</code> <code>coords</code> <code>DetectionCoordindates</code> <p>The coordinates to use for the returned detection results.</p> <code>Roi</code> <p>Returns:</p> Type Description <code>list</code> <p>A list of detected tips. Each detection result is a tuply of 6 values: x, y, width, height, score, class_id.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.enable_follow_mode","title":"<code>enable_follow_mode(stat)</code>","text":"<p>Enable or disable the scope follow mode.</p> <p>If scope follow mode is active the scope will move in sync with the chuck. This is useful for keeping the image in focus while moving the chuck.</p> <p>This function wraps the \"vis:enable_follow_mode\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>stat</code> <code>bool</code> <p>A flag indicating whether to enable or disable the follow mode.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.find_home","title":"<code>find_home()</code>","text":"<p>Find home position.</p> <p>This function uses a pre-trained pattern to fully automatically find the home position.</p> <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.find_pattern","title":"<code>find_pattern(name, threshold=70, pattern_index=0, reference=FindPatternReference.CenterOfRoi)</code>","text":"<p>Find a trained pattern in the camera image.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the pattern to find.</p> required <code>threshold</code> <code>float</code> <p>The detection threshold. The higher the threshold, the more certain the detection must be.</p> <code>70</code> <code>pattern_index</code> <code>int</code> <p>The index of the pattern to find. In SENTIO each pattern may have up to 5 alternate patterns. This is the index of the alternate pattern.</p> <code>0</code> <code>reference</code> <code>FindPatternReference</code> <p>The reference point to use for the pattern detection.</p> <code>CenterOfRoi</code>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.has_camera","title":"<code>has_camera(camera)</code>","text":"<p>Check wether a given camera is present in the system.</p> <p>This function wraps the \"vis:has_camera\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>camera</code> <code>CameraMountPoint</code> <p>The camera mount point to check.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if the camera is present, False otherwise.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.match_tips","title":"<code>match_tips(ptpa_type)</code>","text":"<p>For internal use only! This function is subject to change without any prior warning. MPI will not maintain backwards compatibility or provide support.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.remove_probetip_marker","title":"<code>remove_probetip_marker()</code>","text":"<p>Remove probetip marker from the camera display.</p> <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.snap_image","title":"<code>snap_image(file, what=SnapshotType.CameraRaw, where=SnapshotLocation.Prober)</code>","text":"<p>Save a snapshot of the current camera image to a file.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>str</code> <p>The file name to save the image to.</p> required <code>what</code> <code>SnapshotType</code> <p>The type of snapshot to take.</p> <code>CameraRaw</code> <code>where</code> <code>SnapshotLocation</code> <p>The location where to store the snapshot. By default this is the prober control computer. If SnapshotLocation.Local    is specified the image is download from the probe computer and stored loacally.</p> <code>Prober</code> <p>Returns:</p> Type Description <code>None</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.start_fast_track","title":"<code>start_fast_track()</code>","text":"<p>Start the fast track process as defined in SENTIO.</p> <p>FastTrack is a feature that combines multiple preparation steps into one command. You need to have set up FastTrack in the VisionModule/Automation/FastTrack side  panel editor to use this command.</p> <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.switch_all_lights","title":"<code>switch_all_lights(stat)</code>","text":"<p>Switch all camera lights on or off.</p> <p>This function wraps the \"vis:switch_all_lights\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>stat</code> <code>bool</code> <p>A flag indicating whether to switch the lights on or off.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.switch_camera","title":"<code>switch_camera(camera)</code>","text":"<p>Switch the camera to use for the vision module.</p> <p>Parameters:</p> Name Type Description Default <code>camera</code> <code>CameraMountPoint</code> <p>The camera to switch to.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCommandGroup.VisionCommandGroup.switch_light","title":"<code>switch_light(camera, stat)</code>","text":"<p>Switch the light of a given camera on or off.</p> <p>Parameters:</p> Name Type Description Default <code>camera</code> <code>CameraMountPoint</code> <p>The camera to switch the light for.</p> required <code>stat</code> <code>bool</code> <p>A flag indicating whether to switch the light on or off.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionCompensationGroup/","title":"VisionCompensationGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group contains functions for working with x,y and z compensation.</p> <p>You are not meant to instantiate this class directly. Access it via the compensation attribute of the vision attribute of the SentioProber class.</p> <p>handler: python     options:         members:             VisionCompensationGroup</p>"},{"location":"VisionCompensationGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCompensationGroup.VisionCompensationGroup.enable","title":"<code>enable(comp, enable)</code>","text":"<p>Enable or disable compensation for a given subsystem.</p> <p>Wraps Sentios \"vis:compensation:enable\" command.</p> <p>Parameters:</p> Name Type Description Default <code>comp</code> <code>CompensationMode</code> <p>The compensation to enable or disable.</p> required <code>enable</code> <code>bool</code> <p>True to enable, False to disable.</p> required <p>Returns:</p> Type Description <code>str</code> <p>XY-Mode: State of the XY compensation.</p> <code>str</code> <p>Z-Mode: State of the Z compensation.</p>"},{"location":"VisionCompensationGroup/#sentio_prober_control.Sentio.CommandGroups.VisionCompensationGroup.VisionCompensationGroup.start_execute","title":"<code>start_execute(type, mode)</code>","text":"<p>Start the execution of a compensation.</p> <p>Wraps Sentios \"vis:compensation:start_execute\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>type</code> <code>CompensationType</code> <p>The type of compensation to execute.</p> required <code>mode</code> <code>CompensationMode</code> <p>The mode of compensation to execute.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>A Response object.</p>"},{"location":"VisionIMagProCommandGroup/","title":"VisionIMagProCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group contains functions for working with an IMag pro microscope.</p> <p>You are not meant to instantiate this class directly. Access it via the imagpro attribute of the vision attribute of the SentioProber class.</p> <p>handler: python     options:         members:             VisionIMagProCommandGroup</p>"},{"location":"VisionIMagProCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionIMagProCommandGroup.VisionIMagProCommandGroup.get_xy_comp","title":"<code>get_xy_comp(imag_pro_z)</code>","text":"<p>Get the xy compensation value for a certain z-position of imagpro's internal axis</p> <p>Parameters:</p> Name Type Description Default <code>imag_pro_z</code> <code>float</code> <p>The z-position of imagpro's internal axis.</p> required <p>Returns:</p> Type Description <code>Tuple[float, float]</code> <p>The xy compensation value</p>"},{"location":"VisionIMagProCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionIMagProCommandGroup.VisionIMagProCommandGroup.get_z","title":"<code>get_z(ref)</code>","text":"<p>Get the position od imagpro's internal axis.</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>IMagProZReference</code> <p>The position reference for the returned value.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The position of the z-axis.</p>"},{"location":"VisionIMagProCommandGroup/#sentio_prober_control.Sentio.CommandGroups.VisionIMagProCommandGroup.VisionIMagProCommandGroup.move_z","title":"<code>move_z(ref, pos)</code>","text":"<p>Move imagpro's internal z-axis</p> <p>Parameters:</p> Name Type Description Default <code>ref</code> <code>IMagProZReference</code> <p>The position reference for the motion command.</p> required <code>pos</code> <code>float</code> <p>The position to move to.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The actual position of the z-axis after the move command.</p>"},{"location":"WafermapBinningCommandGroup/","title":"WafermapBinsCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group bundles functions for setting up and using the binning table of the wafermap.</p> <p>handler: python     options:         members:             WafermapBinsCommandGroup</p>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.clear_all","title":"<code>clear_all()</code>","text":"<p>Clear all bins. Remove the bin code from all dies and sibsites.</p>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.clear_all_values","title":"<code>clear_all_values()</code>","text":"<p>Removes all temporarily stored values from the dies.</p> <p>Each die can store a single floating point value. This value can be used for visualizing parameters across the wafer.</p>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.get_bin","title":"<code>get_bin(col=None, row=None, site=None)</code>","text":"<p>Get the bin information of a die or a subsite.</p> <p>Wraps SENTIO's map:bins:get_bin remote command.</p> <p>Parameters:</p> Name Type Description Default <code>col</code> <code>int | None</code> <p>The column of the die.</p> <code>None</code> <code>row</code> <code>int | None</code> <p>The row of the die.</p> <code>None</code> <code>site</code> <code>int | None</code> <p>The site of the die.</p> <code>None</code> <p>Returns:</p> Type Description <code>int</code> <p>The bin value of the die or subsite.</p>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.get_bin_info","title":"<code>get_bin_info(bin)</code>","text":"<p>Get the information of a bin code from the binning table defined in the wafer map.</p> <p>Wraps SENTIO's map:bins:get_bin_info remote command.</p> <p>Returns:</p> Type Description <code>Tuple[int, str, BinQuality, str]</code> <p>A tuple containing the following data items: bin index (same value as the argument), bin description, bin quality (pass/fail information) and bin color.</p>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.get_num_bins","title":"<code>get_num_bins()</code>","text":"<p>Get the number of bins in the binning table.</p> <p>Returns:</p> Type Description <code>int</code> <p>The number of bins in the binning table.</p>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.load","title":"<code>load(file)</code>","text":"<p>Load a binning table from file.</p> <p>Wraps SENTIO's map:bins:load remote command.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>str</code> <p>The file to load the binning table from.</p> required"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.set_all","title":"<code>set_all(bin_val, selection)</code>","text":"<p>Sets the bins of all dies on the wafermap to a specific value.</p> <p>Wraps SENTIO's map:bins:set_all remote command.</p> <p>Parameters:</p> Name Type Description Default <code>bin_val</code> <code>int</code> <p>The bin value to set.</p> required <code>selection</code> <code>BinSelection</code> <p>The selection of dies to set the bin value for.</p> required"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.set_bin","title":"<code>set_bin(bin_value, col=None, row=None, site=None)</code>","text":"<p>Set a single bin.</p> <p>Wraps SENTIO's map:bins:set_bin remote command.</p> <p>Parameters:</p> Name Type Description Default <code>bin_value</code> <code>int</code> <p>The bin value to set.</p> required <code>col</code> <code>int | None</code> <p>The column of the die.#</p> <code>None</code> <code>row</code> <code>int | None</code> <p>The row of the die.</p> <code>None</code> <code>site</code> <code>int | None</code> <p>The site of the die.</p> <code>None</code>"},{"location":"WafermapBinningCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapBinsCommandGroup.WafermapBinsCommandGroup.set_value","title":"<code>set_value(value, col, row)</code>","text":"<p>Set a value on a single die.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>The value to set.</p> required <code>col</code> <code>int</code> <p>The column of the die.</p> required <code>row</code> <code>int</code> <p>The row of the die.</p> required"},{"location":"WafermapCommandGroup/","title":"WafermapCommandGroup","text":"<p>             Bases: <code>ModuleCommandGroupBase</code></p> <p>This class represents the SENTIO command group for wafermap related commands. You are not meant to instantiate objects of this class directly! This class is instantiated by the prober implementation.</p> <p>Examples:</p> <pre><code>from sentio_prober_control.Sentio.ProberSentio import SentioProber\nfrom sentio_prober_control.Communication.CommunicatorTcpIp import CommunicatorTcpIp\nprober = SentioProber(CommunicatorTcpIp.create(\"127.0.0.1:35555\"))\nprober.map.create(200)\n</code></pre> <p>Attributes:</p> Name Type Description <code>bins</code> <code>WafermapBinsCommandGroup</code> <p>Command group with functions for setting up binning tables.</p> <code>die</code> <code>WafermapDieCommandGroup</code> <p>A group to set up specific dies on the wafermap (add/remove them).</p> <code>path</code> <code>WafermapPathCommandGroup</code> <p>A group to set up test paths.</p> <code>poi</code> <code>WafermapPoiCommandGroup</code> <p>A group to set up points of interest.</p> <code>subsites</code> <code>WafermapSubsiteGroup</code> <p>A group to set up subsites.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.bin_step_next_die","title":"<code>bin_step_next_die(bin_value, site=None)</code>","text":"<p>Bin the current die and step to the naxt die.</p> <p>This command wraps the \"map:bin_step_next_die\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>bin_value</code> <code>int</code> <p>The bin value to set for the current die.</p> required <code>site</code> <code>int</code> <p>The subsite index of the next die to move to. Defaults to None. By default the current subsite is retained.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>columns</code> <code>int</code> <p>The column index of the die after stepping</p> <code>rows</code> <code>int</code> <p>The row index of the die after stepping</p> <code>subsite</code> <code>int</code> <p>The subsite index of the die after stepping</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.create","title":"<code>create(diameter)</code>","text":"<p>Create a new round wafer map.</p> <p>Wraps Sentios \"map:create\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>diameter</code> <code>float</code> <p>The diameter of the wafer.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.create_rect","title":"<code>create_rect(cols, rows)</code>","text":"<p>Create a new rectangular wafer map.</p> <p>Wraps Sentios \"map:create_rect\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>cols</code> <code>int</code> <p>The number of columns.</p> required <code>rows</code> <code>int</code> <p>The number of rows.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.die_reference_is_set","title":"<code>die_reference_is_set()</code>","text":"<p>Returns true if the die reference offset is set.</p> <p>In simple terms the die reference offset is the distance of site 0 from the lower left corner of the die. This position defines where the die is located with respect to the die in particular and the wafer map grid in extension.</p> <p>When the chuck is at site 0 and the probe card is properly in contact at the home position, then the die reference offset is the distance between a user defined reference tip of the probe card and the lower left corner of the die.</p> <p>Without a properly trained die reference position SENTIO is unable to accurately deterine the die coordinates from a chuck position. Most of the time this is not a problem.</p> <p>When a die reference is trained Sentio will use the die reference offset to calculate the die coordinates of the die which is under the reference tip of the probe card. The reference tip can be any tip of the probe card.</p> <p>Wraps Sentios \"map:get_prop die_reference_is_set\" remote command.</p> <p>Returns:</p> Type Description <code>bool</code> <p>True if the die reference offset is set.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.end_of_route","title":"<code>end_of_route()</code>","text":"<p>Returns True if the last stepping command reached the end of the route.</p> <p>The end of route flag is checked and set by the stepping commands. They will evaluate and parse the end of route status from the remote command response and internally set this flag.</p> <p>Calling the function is only usefull after a step command was issued.</p> <p>Returns:</p> Type Description <code>bool</code> <p>True if the last step command reached the end of the route.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_axis_orient","title":"<code>get_axis_orient()</code>","text":"<p>Get axis orientation of the wafer map.</p> <p>Wraps Sentios \"map:get_axis_orient\" remote command.</p> <p>Returns:</p> Type Description <code>AxisOrient</code> <p>The axis orientation.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_diameter","title":"<code>get_diameter()</code>","text":"<p>Get diameter of the wafer map im millimeter.</p> <p>Wraps Sentios \"map:get_diameter\" remote command.</p> <p>Returns:</p> Type Description <code>float</code> <p>The diameter of the wafer map in millimeter.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_die_reference","title":"<code>get_die_reference()</code>","text":"<p>Get the die reference offset.</p> <p>In simple terms the die reference offset is the distance of site 0 from the lower left corner of the die. This position defines where the die is located with respect to the die in particular and the wafer map grid in extension.</p> <p>When the chuck is at site 0 and the probe card is properly in contact at the home position, then the die reference offset is the distance between a user defined reference tip of the probe card and the lower left corner of the die.</p> <p>Without a properly trained die reference position SENTIO is unable to accurately deterine the die coordinates from a chuck position. Most of the time this is not a problem.</p> <p>When a die reference is trained Sentio will use the die reference offset to calculate the die coordinates of the die which is under the reference tip of the probe card. The reference tip can be any tip of the probe card.</p> <p>Wraps SENTIO's \"map:get_prop die_reference\" remote command.</p> <p>Returns:</p> Type Description <code>Tuple[float, float]</code> <p>A tuple with the x and y offset in micrometer.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_die_seq","title":"<code>get_die_seq()</code>","text":"<p>Returns the sequence number of the current die.</p> <p>The sequence number id the index of the die in the current stepping sequence. The stepping sequence contains the dies selected for test. The sequence number is zero based and is also displayed in the wafermap when zoomin into a die.</p> <p>Wraps Sentios \"map:get_die_seq\" remote command.</p> <p>Returns:</p> Type Description <code>int</code> <p>The sequence number of the current die.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_grid_origin","title":"<code>get_grid_origin()</code>","text":"<p>Get origin of the wafermap grid.</p> <p>Wraps Sentios \"map:get_grid_origin\" remote command.</p> <p>Returns:</p> Type Description <code>Tuple[int, int]</code> <p>A tuple with the column and row indices of the origin.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_index_size","title":"<code>get_index_size()</code>","text":"<p>Return the die size set up in the wafer map.</p> <p>Returns:</p> Type Description <code>Tuple[float, float]</code> <p>A tuple with the die width and height in micrometer.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_num_dies","title":"<code>get_num_dies(selection)</code>","text":"<p>Returns the number of dies in the wafer map.</p> <p>Parameters:</p> Name Type Description Default <code>selection</code> <code>DieNumber</code> <p>The selection of dies to count.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The number of dies.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.get_street_size","title":"<code>get_street_size()</code>","text":"<p>Returns the street size set up in the wafer map.</p> <p>In SENTIO the street size is merely a visual aid. It is not used for any calculations. The only purpose is rendering the diese in a more realistic manner.</p> <p>Returns:</p> Type Description <code>Tuple[int, int]</code> <p>A tuple with the street width and height in micrometer.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_axis_orient","title":"<code>set_axis_orient(orient)</code>","text":"<p>Set the acis orientation of the custom coordinate system.</p> <p>SENTIO's internal coordinate system is placing the origin at the center of the wafer and assumes the y-axis is pointing upwards and the x-axis is pointing to the right. With this command you can change the orientation of the coordinate system.</p> <p>Wraps Sentios \"map:set_axis_orient\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>orient</code> <code>AxisOrient</code> <p>The axis orientation.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_color_scheme","title":"<code>set_color_scheme(scheme)</code>","text":"<p>Set color scheme of the wafermap.</p> <p>The wafermap colorscheme determines how dies are colored. The only two options are color from bin or color from value. The first one will use the binning table to color the die the second one will apply a color scale based on a numeric value associated with the die. (Each die can have a singe temporary numerical value assigned to it.)</p> <p>Wraps Sentios \"map:set_color_scheme\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>scheme</code> <code>ColorScheme</code> <p>The color scheme.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_flat_params","title":"<code>set_flat_params(angle, width)</code>","text":"<p>Set the flat parameters of the wafer map.</p> <p>Sets the parameters of the flat wafer orientation marker for display in the wafermap.</p> <p>Parameters:</p> Name Type Description Default <code>angle</code> <code>float</code> <p>The angle of the flat in degrees.</p> required <code>width</code> <code>float</code> <p>The width of the flat in micrometer.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_grid_origin","title":"<code>set_grid_origin(x, y)</code>","text":"<p>Set a user defined grid origin.</p> <p>SENTIO's internal coordinate system is placing the origin at the center of the wafer and assumes the y-axis is pointing upwards and the x-axis is pointing to the right. You may want to use a custom coordinate system for your wafermap. Coordinates with customized grid origin are referred to as custom coordinates.</p> <p>Wraps Sentios \"map:set_grid_origin\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>int</code> <p>The x coordinate of the grid origin in SENTIO's native grid coordinate system.</p> required <code>y</code> <code>int</code> <p>The y coordinate of the grid origin in SENTIO's native grid coordinate system.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_grid_params","title":"<code>set_grid_params(ix, iy, offx, offy, edge)</code>","text":"<p>Set wafermap grid parameters. This function defines the wafermapo grid layout which means setting the size of a die. Setting the grid offset and the size of the edge exclusion zone.</p> <p>By default SENTIO assumes that the grid is oriented in a way that the center of the wafer grid is exactly at the lower left corner of the die located in the center. This would therefore also be the position of site 0.</p> <p>It is not recommended to set the grid offset to 0,0 because this may pose problems when computing the current die index from a chuck position. Due to inaccuracies in the chuck motion the computation may end up in the wrong die because with grid offset of 0,0 this position is at the edge of 4 dies.</p> <p>It is recommended to either determine the correct value of the die reference offset or to use half the die size as grid offset.</p> <p>Wraps Sentios \"map:set_grid_params\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>ix</code> <code>float</code> <p>The width of a single die in micrometer.</p> required <code>iy</code> <code>float</code> <p>The height of a single die in micrometer.</p> required <code>offx</code> <code>float</code> <p>The x offset of the grid in micrometer.</p> required <code>offy</code> <code>float</code> <p>The y offset of the grid in micrometer.</p> required <code>edge</code> <code>int</code> <p>The size of the edge exclusion zone in micrometer.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_home_die","title":"<code>set_home_die(x, y)</code>","text":"<p>\" Sets the home die coordinates in custom coordinates.</p> <p>Wraps Sentios \"map:set_home_die\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>int</code> <p>The x coordinate of the home die in custom coordinates.</p> required <code>y</code> <code>int</code> <p>The y coordinate of the home die in custom coordinates.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_index_size","title":"<code>set_index_size(x, y)</code>","text":"<p>Set the size of a die.</p> <p>Wraps Sentios \"map:set_index_size\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>float</code> <p>The width of the die in micrometer.</p> required <code>y</code> <code>float</code> <p>The height of the die in micrometer.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.set_street_size","title":"<code>set_street_size(x, y)</code>","text":"<p>Set size of streetlines.</p> <p>In SENTIO the street size is merely a visual aid. It is not used for any calculations. The only purpose is rendering the diese in a more realistic manner.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>float</code> <p>The width of the street in micrometer.</p> required <code>y</code> <code>float</code> <p>The height of the street in micrometer.</p> required"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.step_die","title":"<code>step_die(col, row, site=0)</code>","text":"<p>Step to a specific die (or subsite) which is identified by its column, row and subsite number.</p> <p>When the stepping command is issued on the last die of the route, the end of route flag is set and can be queried with the end_of_route member function.</p> <p>Wraps Sentios \"map:step_die\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>col</code> <code>int</code> <p>The column index of the die.</p> required <code>row</code> <code>int</code> <p>The row index of the die.</p> required <code>site</code> <code>int</code> <p>The subsite index of the die. Defaults to 0.</p> <code>0</code> <p>Returns:</p> Type Description <code>Tuple[int, int, int]</code> <p>A tuple with the column, row and site index representing the position after the step command.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.step_die_seq","title":"<code>step_die_seq(seq, site)</code>","text":"<p>Step to a specific die in the stepping sequence.</p> <p>Wraps Sentios \"map:step_die_seq\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>seq</code> <code>int</code> <p>The sequence number of the die to step to.</p> required <code>site</code> <code>int</code> <p>The subsite index of the die.</p> required <p>Returns:</p> Type Description <code>Tuple[int, int, int]</code> <p>A tuple with the column, row and site index representing the position after the step command.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.step_first_die","title":"<code>step_first_die(site=None)</code>","text":"<p>Step to the first die in the stepping sequence.</p> <p>Wraps Sentios \"map:step_first_die\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>site</code> <code>int | None</code> <p>The subsite index of the die. If omitted SENTIO will step to the first active site.</p> <code>None</code> <p>Returns:</p> Type Description <code>Tuple[int, int, int]</code> <p>A tuple with the column, row and site index representing the position after the step command.</p>"},{"location":"WafermapCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapCommandGroup.WafermapCommandGroup.step_next_die","title":"<code>step_next_die(site=None)</code>","text":"<p>Step to the next die in the stepping sequence.</p> <p>Sentio will stay on the current subsite.</p> <p>Returns:</p> Type Description <code>Tuple[int, int, int]</code> <p>A tuple with the column, row and site index representing the position after the step command.</p>"},{"location":"WafermapDieCommandGroup/","title":"WafermapDieCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This Command group bundles commands for setting up dies on a wafermap.</p> <p>handler: python     options:         members:             WafermapDieCommandGroup</p>"},{"location":"WafermapDieCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapDieCommandGroup.WafermapDieCommandGroup.add","title":"<code>add(x, y)</code>","text":"<p>Add a die to the wafermap. If the die is already part of the map nothing happens.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>int</code> <p>The column of the die.</p> required <code>y</code> <code>int</code> <p>The row of the die.</p> required"},{"location":"WafermapDieCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapDieCommandGroup.WafermapDieCommandGroup.remove","title":"<code>remove(x, y)</code>","text":"<p>Remove a die from the wafermap.</p> <p>This will mark the die as nonexistant and make it unavailable for stepping. Removed dies are treated as if they were physically not present on the wafer.</p> <p>Wraps SENTIO's map:die:remove remote command.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>int</code> <p>The column of the die.</p> required <code>y</code> <code>int</code> <p>The row of the die.</p> required"},{"location":"WafermapDieCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapDieCommandGroup.WafermapDieCommandGroup.select","title":"<code>select(x, y)</code>","text":"<p>Selects a die for testing by adding it to the test path.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>int</code> <p>The column of the die.</p> required <code>y</code> <code>int</code> <p>The row of the die.</p> required"},{"location":"WafermapDieCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapDieCommandGroup.WafermapDieCommandGroup.unselect","title":"<code>unselect(x, y)</code>","text":"<p>Unselects a die from testing by removing it from the test path.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>int</code> <p>The column of the die.</p> required <code>y</code> <code>int</code> <p>The row of the die.</p> required"},{"location":"WafermapPathCommandGroup/","title":"WafermapPathCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>This command group bundles functions for setting up and using the test path of the wafermap.</p> <p>A test path defines which dies are tested in which order.</p> <p>handler: python     options:         members:             WafermapPathCommandGroup</p>"},{"location":"WafermapPathCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPathCommandGroup.WafermapPathCommandGroup.create_from_bin","title":"<code>create_from_bin(bin_val)</code>","text":"<p>Create test path by using all dies with a specific bin.</p> <p>Wraps SENTIO's map:path:create_from_bin remote command.</p> <p>Parameters:</p> Name Type Description Default <code>bin_val</code> <code>int</code> <p>The bin value to use.</p> required"},{"location":"WafermapPathCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPathCommandGroup.WafermapPathCommandGroup.get_die","title":"<code>get_die(seq)</code>","text":"<p>Get die column and row coordinates from a sequence number.</p> <p>Wraps SENTIO's map:path:get_die remote command.</p> <p>Parameters:</p> Name Type Description Default <code>seq</code> <code>int</code> <p>The sequence number of the die.</p> required <p>Returns:</p> Type Description <code>Tuple[int, int]</code> <p>A tuple with the column and row coordinates of the die.</p>"},{"location":"WafermapPathCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPathCommandGroup.WafermapPathCommandGroup.select_dies","title":"<code>select_dies(selection)</code>","text":"<p>Select dies for testing.</p> <p>Wraps SENTIO's map:path:select_dies remote command.</p> <p>Parameters:</p> Name Type Description Default <code>selection</code> <code>TestSelection</code> <p>The selection of dies to select.</p> required"},{"location":"WafermapPathCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPathCommandGroup.WafermapPathCommandGroup.set_routing","title":"<code>set_routing(sp, pri)</code>","text":"<p>Set up path finnding for stepping by specifying a start point position and a row or column priority for routing.</p> <p>Wraps SENTIO's map:set_routing remote command.</p> <p>Parameters:</p> Name Type Description Default <code>sp</code> <code>RoutingStartPoint</code> <p>The start point of the routing.</p> required <code>pri</code> <code>RoutingPriority</code> <p>The priority of the routing (rows first, columns first).</p> required"},{"location":"WafermapPoiCommandGroup/","title":"WafermapPoiCommandGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>A command group for working with Points of Interest (POI) on the wafermap.</p> <p>handler: python     options:         members:             WafermapPoiCommandGroup</p>"},{"location":"WafermapPoiCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPoiCommandGroup.WafermapPoiCommandGroup.add","title":"<code>add(x, y, desc)</code>","text":"<p>Add a POI to the list.</p> <p>Wraps SENTIO's map:poi:add remote command.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>float</code> <p>The x coordinate of the POI.</p> required <code>y</code> <code>float</code> <p>The y coordinate of the POI.</p> required <code>desc</code> <code>str</code> <p>The description of the POI.</p> required"},{"location":"WafermapPoiCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPoiCommandGroup.WafermapPoiCommandGroup.get_num","title":"<code>get_num()</code>","text":"<p>Returns the number of POIs in the list.</p> <p>Wraps SENTIO's map:poi:get_num remote command.</p> <p>Returns:</p> Type Description <code>int</code> <p>The number of POIs in the list.</p>"},{"location":"WafermapPoiCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPoiCommandGroup.WafermapPoiCommandGroup.reset","title":"<code>reset(stage, refXy)</code>","text":"<p>Reset the list of POIs.</p> <p>Clears the list and resets its stage and position reference settings.</p> <p>Wraps SENTIO's map:poi:reset remote command.</p> <p>Parameters:</p> Name Type Description Default <code>stage</code> <code>Stage</code> <p>The stage to reset the POIs for.</p> required <code>refXy</code> <code>PoiReferenceXy</code> <p>The reference point for the POIs.</p> required"},{"location":"WafermapPoiCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPoiCommandGroup.WafermapPoiCommandGroup.step","title":"<code>step(target)</code>","text":"<p>Step to a POI in the list.</p> <p>Wraps SENTIO's map:poi:step remote command.</p> <p>Parameters:</p> Name Type Description Default <code>target</code> <code>str | int</code> <p>The target POI to step to. This is either the index of the poi or the id of the poi.</p> required"},{"location":"WafermapPoiCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPoiCommandGroup.WafermapPoiCommandGroup.step_first","title":"<code>step_first()</code>","text":"<p>Step to the first POI in the list.</p> <p>Wraps SENTIO's map:poi:step_first remote command.</p>"},{"location":"WafermapPoiCommandGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapPoiCommandGroup.WafermapPoiCommandGroup.step_next","title":"<code>step_next()</code>","text":"<p>Step to the next POI in the list.</p> <p>Wrap SENTIO's map:poi:step_next remote command.</p>"},{"location":"WafermapSubsiteGroup/","title":"WafermapSubsiteGroup","text":"<p>             Bases: <code>CommandGroupBase</code></p> <p>Represents the wafermap subsite command group which provides functionality for setting up und stepping over subsites.</p> <p>handler: python     options:         members:             WafermapSubsiteGroup</p>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.__init__","title":"<code>__init__(comm, wafermap_command_group)</code>","text":"<p>Creates a new WafermapSubsiteGroup object.</p> <p>You are not meant to directly create objects of this class.</p>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.add","title":"<code>add(id, x, y, orient=AxisOrient.UpRight)</code>","text":"<p>Add a single subsite to the wafermap.</p> <p>Creates a new subsite definition in SENTIO. The subsite position is defined relative to the die home position. This is the chuck home position projected onto the current die.</p> <p>Wraps the \"map:subsite:add\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The subsite id.</p> required <code>x</code> <code>float</code> <p>The x position of the subsite in micrometer as an offset to the die home position.</p> required <code>y</code> <code>float</code> <p>The y position of the subsite in micrometer as an offset to the die home position.</p> required <code>orient</code> <code>AxisOrient</code> <p>The axis orientation used fot the submitted values</p> <code>UpRight</code>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.bin_step_next","title":"<code>bin_step_next(bin)</code>","text":"<p>Step to the next active subsite and assign bin code to current subsite.</p> <p>Wraps the \"map:subsite:bin_step_next\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>bin</code> <code>int</code> <p>The bin code to assign to the current subsite.</p> required <p>Returns:</p> Type Description <code>Tuple[int, int, int]</code> <p>A tuple containing the wafermap row, column and subsite index after the step.</p>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.get","title":"<code>get(idx, orient=None)</code>","text":"<p>Returns the subsite definition for a subsite with a given index.</p> <p>Wraps the \"map:subsite:get\" remote command.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the subsite.</p> required <code>orient</code> <code>AxisOrient | None</code> <p>The axis orientation used for the returned subsite coordinates. If this parameter is omitted the axis orientation of the wafer map is used.</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>A tuple containing the subsite id, the x position and the y position of the subsite.</p> <code>float</code> <p>X and y positions are relative to the die home position.</p>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.get_num","title":"<code>get_num()</code>","text":"<p>Retrieve the number of subsites per die defined in the wafermap.</p> <p>Wraps the \"map:subsite:get_num\" remote command.</p> <p>Returns:</p> Type Description <code>int</code> <p>The number of subsites in the wafermap.</p>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.reset","title":"<code>reset()</code>","text":"<p>Reset Sentios subsite definitions.</p> <p>Wraps the \"map:subsite:reset\" remote command.</p>"},{"location":"WafermapSubsiteGroup/#sentio_prober_control.Sentio.CommandGroups.WafermapSubsiteCommandGroup.WafermapSubsiteGroup.step_next","title":"<code>step_next()</code>","text":"<p>Step to the next active subsite.</p> <p>Wraps the \"map:subsite:step_next\" remote command.</p> <p>Returns:</p> Type Description <code>Tuple[int, int, int]</code> <p>A tuple containing the wafermap row, column and subsite index after the step.</p>"},{"location":"Communication/GpibCardVendor/","title":"GpibCardVendor","text":"<p>             Bases: <code>Enum</code></p> <p>An enumeration that specifies the type of the GPIB card to use for GPIB communication.</p> <p>handler: python     options:         members:             GpibCardVendor</p>"},{"location":"Communication/GpibCardVendor/#sentio_prober_control.Communication.CommunicatorGpib.GpibCardVendor.Adlink","title":"<code>Adlink = (0)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specify this if you use an ADLINK GPIB card. You must have installed the ADLINK drivers on your system in order to use this option!</p>"},{"location":"Communication/GpibCardVendor/#sentio_prober_control.Communication.CommunicatorGpib.GpibCardVendor.NationalInstruments","title":"<code>NationalInstruments = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specify this if you use a National Instruments GPIB card. You must have installed the NI-GPIB drivers on your systen in order to use this option!</p>"}]}